--[[ .____ ________ ___. _____ __ | | __ _______ \_____ \\_ |___/ ____\_ __ ______ ____ _____ _/ |_ ___________ | | | | \__ \ / | \| __ \ __\ | \/ ___// ___\\__ \\ __\/ _ \_ __ \ | |___| | // __ \_/ | \ \_\ \ | | | /\___ \\ \___ / __ \| | ( <_> ) | \/ |_______ \____/(____ /\_______ /___ /__| |____//____ >\___ >____ /__| \____/|__| \/ \/ \/ \/ \/ \/ \/ \_Welcome to LuaObfuscator.com (Alpha 0.10.6) ~ Much Love, Ferib ]]-- local v0 = tonumber; local v1 = string.byte; local v2 = string.char; local v3 = string.sub; local v4 = string.gsub; local v5 = string.rep; local v6 = table.concat; local v7 = table.insert; local v8 = math.ldexp; local v9 = getfenv or function() 	return _ENV; end; local v10 = setmetatable; local v11 = pcall; local v12 = select; local v13 = unpack or table.unpack; local v14 = tonumber; local function v15(v16, v17, ...) 	local v18 = 1; 	local v19; 	v16 = v4(v3(v16, 5), "..", function(v30) 		if (v1(v30, 2) == 79) then 			local v88 = 0; 			while true do 				if (v88 == 0) then 					v19 = v0(v3(v30, 1, 1)); 					return ""; 				end 			end 		else 			local v89 = v2(v0(v30, 16)); 			if v19 then 				local v111 = v5(v89, v19); 				v19 = nil; 				return v111; 			else 				return v89; 			end 		end 	end); 	local function v20(v31, v32, v33) 		if v33 then 			local v90 = (v31 / ((5 - (1640 - (1523 + 114))) ^ (v32 - (2 - 1)))) % ((3 - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + 64)))) + (932 - (857 + 67 + 7)))); 			return v90 - (v90 % (569 - (367 + 201))); 		else 			local v91 = 927 - (214 + 713); 			local v92; 			while true do 				if (v91 == (0 + 0)) then 					v92 = (1 + 1) ^ (v32 - 1); 					return (((v31 % (v92 + v92)) >= v92) and 1) or (877 - (282 + 595)); 				end 			end 		end 	end 	local function v21() 		local v34 = v1(v16, v18, v18); 		v18 = v18 + 1; 		return v34; 	end 	local function v22() 		local v35, v36 = v1(v16, v18, v18 + (2 - 0)); 		v18 = v18 + (1067 - (68 + 997)); 		return (v36 * (1526 - (226 + 1044))) + v35; 	end 	local function v23() 		local v37, v38, v39, v40 = v1(v16, v18, v18 + 3); 		v18 = v18 + (17 - 13); 		return (v40 * (16777333 - (32 + 85))) + (v39 * 65536) + (v38 * (251 + 5)) + v37; 	end 	local function v24() 		local v41 = v23(); 		local v42 = v23(); 		local v43 = 1 + 0; 		local v44 = (v20(v42, 958 - (892 + 65), 20) * ((4 - 2) ^ (58 - 26))) + v41; 		local v45 = v20(v42, 38 - 17, 381 - (87 + 263)); 		local v46 = ((v20(v42, 212 - (67 + 113)) == ((1188 - (1069 + 118)) + 0)) and -(2 - 1)) or (1 + 0); 		if (v45 == (0 - 0)) then 			if (v44 == (952 - ((1819 - 1017) + 150))) then 				return v46 * (0 - 0); 			else 				v45 = 1 - 0; 				v43 = 0 + 0; 			end 		elseif (v45 == (3044 - ((2001 - 1086) + 15 + 67))) then 			return ((v44 == 0) and (v46 * ((2 - 1) / (0 + 0)))) or (v46 * NaN); 		end 		return v8(v46, v45 - 1023) * (v43 + (v44 / ((2 - 0) ^ 52))); 	end 	local function v25(v47) 		local v48; 		if not v47 then 			local v93 = 0; 			while true do 				if (v93 == ((18 - (10 + 8)) - (0 - 0))) then 					v47 = v23(); 					if (v47 == (0 + (442 - (416 + 26)))) then 						return ""; 					end 					break; 				end 			end 		end 		v48 = v3(v16, v18, (v18 + v47) - (792 - (368 + 423))); 		v18 = v18 + v47; 		local v49 = {}; 		for v65 = 3 - 2, #v48 do 			v49[v65] = v2(v1(v3(v48, v65, v65))); 		end 		return v6(v49); 	end 	local v26 = v23; 	local function v27(...) 		return {...}, v12("#", ...); 	end 	local function v28() 		local v50 = (function() 			return function(v94, v95, v96, v97, v98, v99, v100, v101, v102) 				local v103 = (function() 					return 0; 				end)(); 				local v94 = (function() 					return; 				end)(); 				local v95 = (function() 					return; 				end)(); 				while true do 					if (v103 == (2 - 1)) then 						local v116 = (function() 							return 0; 						end)(); 						while true do 							if ((1821 - (1483 + 338)) == v116) then 								local v121 = (function() 									return 0; 								end)(); 								while true do 									if (v121 ~= (1695 - (1229 + 466))) then 									else 										while true do 											if (v94 ~= 0) then 											else 												v95 = (function() 													return v96(); 												end)(); 												if (v97(v95, #"}", #"<") == (0 - 0)) then 													local v124 = (function() 														return 0; 													end)(); 													local v125 = (function() 														return; 													end)(); 													local v126 = (function() 														return; 													end)(); 													local v127 = (function() 														return; 													end)(); 													while true do 														if (1 == v124) then 															local v691 = (function() 																return 578 - (386 + 192); 															end)(); 															local v692 = (function() 																return; 															end)(); 															while true do 																if ((1206 - (696 + 510)) ~= v691) then 																else 																	v692 = (function() 																		return 0; 																	end)(); 																	while true do 																		if (v692 == 0) then 																			v127 = (function() 																				return {v98(),v98(),nil,nil}; 																			end)(); 																			if (v125 == 0) then 																				local v1379 = (function() 																					return 1262 - (1091 + 171); 																				end)(); 																				while true do 																					if (v1379 ~= 0) then 																					else 																						v127[#"xxx"] = (function() 																							return v98(); 																						end)(); 																						v127[#"xnxx"] = (function() 																							return v98(); 																						end)(); 																						break; 																					end 																				end 																			elseif (v125 == #".") then 																				v127[#"gha"] = (function() 																					return v99(); 																				end)(); 																			elseif (v125 == 2) then 																				v127[#"gha"] = (function() 																					return v99() - ((2 - 0) ^ (3 + 13)); 																				end)(); 																			elseif (v125 ~= #"gha") then 																			else 																				local v1384 = (function() 																					return 0 - 0; 																				end)(); 																				local v1385 = (function() 																					return; 																				end)(); 																				while true do 																					if ((0 - 0) ~= v1384) then 																					else 																						v1385 = (function() 																							return 0; 																						end)(); 																						while true do 																							if ((0 - 0) == v1385) then 																								v127[#"gha"] = (function() 																									return v99() - (2 ^ 16); 																								end)(); 																								v127[#".com"] = (function() 																									return v98(); 																								end)(); 																								break; 																							end 																						end 																						break; 																					end 																				end 																			end 																			v692 = (function() 																				return 286 - (134 + 151); 																			end)(); 																		end 																		if (v692 == (375 - (123 + 251))) then 																			v124 = (function() 																				return 9 - 7; 																			end)(); 																			break; 																		end 																	end 																	break; 																end 															end 														end 														if (v124 ~= (1990 - (582 + 1408))) then 														else 															local v693 = (function() 																return 0 - 0; 															end)(); 															while true do 																if ((698 - (208 + 490)) == v693) then 																	v125 = (function() 																		return v97(v95, 7 - 5, #"nil"); 																	end)(); 																	v126 = (function() 																		return v97(v95, #"asd1", 1830 - (1195 + 629)); 																	end)(); 																	v693 = (function() 																		return 1 + 0; 																	end)(); 																end 																if (v693 == 1) then 																	v124 = (function() 																		return 1 + 0; 																	end)(); 																	break; 																end 															end 														end 														if (v124 ~= (839 - (660 + 176))) then 														else 															if (v97(v126, #"asd", #"gha") ~= #"!") then 															else 																v127[#"?id="] = (function() 																	return v100[v127[#".dev"]]; 																end)(); 															end 															v101[v102] = (function() 																return v127; 															end)(); 															break; 														end 														if (v124 == (1 + 1)) then 															if (v97(v126, #":", #"!") ~= #"]") then 															else 																v127[2 + 0] = (function() 																	return v100[v127[204 - (14 + 188)]]; 																end)(); 															end 															if (v97(v126, 677 - (534 + 141), 1 + 1) == #"[") then 																v127[#"xxx"] = (function() 																	return v100[v127[#"xnx"]]; 																end)(); 															end 															v124 = (function() 																return 4 - 1; 															end)(); 														end 													end 												end 												break; 											end 										end 										return v94, v95, v96, v97, v98, v99, v100, v101, v102; 									end 								end 							end 						end 					end 					if (v103 ~= (0 + 0)) then 					else 						v94 = (function() 							return 0 + 0; 						end)(); 						v95 = (function() 							return nil; 						end)(); 						v103 = (function() 							return 1001 - (451 + 549); 						end)(); 					end 				end 			end; 		end)(); 		local v51 = (function() 			return function(v104, v105, v106) 				local v107 = (function() 					return 0 + 0; 				end)(); 				local v108 = (function() 					return; 				end)(); 				while true do 					if (v107 == (0 - 0)) then 						v108 = (function() 							return 0 - 0; 						end)(); 						while true do 							if (v108 ~= (0 - 0)) then 							else 								local v122 = (function() 									return 0; 								end)(); 								while true do 									if ((0 - 0) == v122) then 										v104[v105 - #"!"] = (function() 											return v106(); 										end)(); 										return v104, v105, v106; 									end 								end 							end 						end 						break; 					end 				end 			end; 		end)(); 		local v52 = (function() 			return {}; 		end)(); 		local v53 = (function() 			return {}; 		end)(); 		local v54 = (function() 			return {}; 		end)(); 		local v55 = (function() 			return {v52,v53,nil,v54}; 		end)(); 		local v56 = (function() 			return v23(); 		end)(); 		local v57 = (function() 			return {}; 		end)(); 		for v67 = #"}", v56 do 			local v68 = (function() 				return 0; 			end)(); 			local v69 = (function() 				return; 			end)(); 			local v70 = (function() 				return; 			end)(); 			local v71 = (function() 				return; 			end)(); 			while true do 				if ((1 + 0) == v68) then 					v71 = (function() 						return nil; 					end)(); 					while true do 						if ((1 + 0) ~= v69) then 						else 							if (v70 == #">") then 								v71 = (function() 									return v21() ~= 0; 								end)(); 							elseif (v70 == 2) then 								v71 = (function() 									return v24(); 								end)(); 							elseif (v70 == #"xnx") then 								v71 = (function() 									return v25(); 								end)(); 							end 							v57[v67] = (function() 								return v71; 							end)(); 							break; 						end 						if (v69 == (396 - (115 + 281))) then 							local v120 = (function() 								return 0 - 0; 							end)(); 							while true do 								if (v120 == (342 - (218 + 123))) then 									v69 = (function() 										return 1582 - (1535 + 46); 									end)(); 									break; 								end 								if (v120 == (0 + 0)) then 									v70 = (function() 										return v21(); 									end)(); 									v71 = (function() 										return nil; 									end)(); 									v120 = (function() 										return 1; 									end)(); 								end 							end 						end 					end 					break; 				end 				if (v68 == (0 + 0)) then 					v69 = (function() 						return 0 + 0; 					end)(); 					v70 = (function() 						return nil; 					end)(); 					v68 = (function() 						return 1; 					end)(); 				end 			end 		end 		v55[#"xxx"] = (function() 			return v21(); 		end)(); 		for v72 = #",", v23() do 			FlatIdent_6D4CB, Descriptor, v21, v20, v22, v23, v57, v52, v72 = (function() 				return v50(FlatIdent_6D4CB, Descriptor, v21, v20, v22, v23, v57, v52, v72); 			end)(); 		end 		for v73 = #"[", v23() do 			v53, v73, v28 = (function() 				return v51(v53, v73, v28); 			end)(); 		end 		return v55; 	end 	local function v29(v59, v60, v61) 		local v62 = v59[1 + 0 + 0]; 		local v63 = v59[2]; 		local v64 = v59[5 - 2]; 		return function(...) 			local v74 = v62; 			local v75 = v63; 			local v76 = v64; 			local v77 = v27; 			local v78 = (2500 - (809 + 223)) - ((1311 - 412) + 568); 			local v79 = -1; 			local v80 = {}; 			local v81 = {...}; 			local v82 = v12("#", ...) - 1; 			local v83 = {}; 			local v84 = {}; 			for v109 = 0 - 0, v82 do 				if (v109 >= v76) then 					v80[v109 - v76] = v81[v109 + 1]; 				else 					v84[v109] = v81[v109 + (604 - (268 + 335))]; 				end 			end 			local v85 = (v82 - v76) + 1 + 0; 			local v86; 			local v87; 			while true do 				local v110 = (152 + 138) - (60 + 230); 				while true do 					if (v110 == 1) then 						if (v87 <= 34) then 							if ((3869 < 3889) and (v87 <= (588 - (426 + 146)))) then 								if (v87 <= 7) then 									if (v87 <= ((618 - (14 + 603)) + 2)) then 										if ((2518 < 3050) and (v87 <= (1457 - (282 + 1174)))) then 											if ((4807 > 177) and (v87 > (811 - (569 + 242)))) then 												local v128 = 0 - 0; 												local v129; 												local v130; 												local v131; 												local v132; 												local v133; 												while true do 													if (v128 == (1 + 3)) then 														v130, v131 = v77(v84[v133](v13(v84, v133 + 1, v86[132 - (118 + 11)]))); 														v79 = (v131 + v133) - (1025 - (706 + 318)); 														v129 = 1251 - (721 + 530); 														for v1292 = v133, v79 do 															local v1293 = 1271 - (945 + 53 + 273); 															while true do 																if (v1293 == 0) then 																	v129 = v129 + (2 - 1); 																	v84[v1292] = v130[v129]; 																	break; 																end 															end 														end 														v78 = v78 + 1 + 0; 														v128 = (588 + 117) - (271 + 429); 													end 													if ((3663 >= 863) and (v128 == (1 + 0))) then 														v78 = v78 + (1501 - (1408 + 92)); 														v86 = v74[v78]; 														v84[v86[1088 - (461 + 625)]] = v61[v86[3]]; 														v78 = v78 + (1289 - ((2893 - 1900) + 295)); 														v86 = v74[v78]; 														v128 = 951 - (551 + 398); 													end 													if (v128 == (1 + 2)) then 														v86 = v74[v78]; 														v84[v86[1173 - (418 + 753)]] = v86[3]; 														v78 = v78 + 1 + 0 + 0; 														v86 = v74[v78]; 														v133 = v86[1 + 0 + 1 + 0]; 														v128 = 4; 													end 													if (v128 == (2 + 3)) then 														v86 = v74[v78]; 														v133 = v86[1 + (3 - 2)]; 														v84[v133] = v84[v133](v13(v84, v133 + (530 - (406 + 123)), v79)); 														v78 = v78 + (1770 - (1749 + (46 - 26))); 														v86 = v74[v78]; 														v128 = 2 + 4; 													end 													if (v128 == (1324 - (1249 + 73))) then 														v133 = v86[1 + 1]; 														v132 = v84[v86[1148 - (466 + 679)]]; 														v84[v133 + 1] = v132; 														v84[v133] = v132[v86[4]]; 														v78 = v78 + 1; 														v128 = 6 - 3; 													end 													if ((4018 <= 4690) and (v128 == (17 - 11))) then 														v84[v86[1902 - (35 + 71 + 1794)]](); 														v78 = v78 + 1 + 0; 														v86 = v74[v78]; 														do 															return; 														end 														break; 													end 													if (v128 == 0) then 														v129 = nil; 														v130, v131 = nil; 														v132 = nil; 														v133 = nil; 														v84[v86[1 + (3 - 2)]] = v61[v86[8 - (2 + 3)]]; 														v128 = 2 - 1; 													end 												end 											else 												local v134; 												local v135, v136; 												local v137; 												local v138; 												v84[v86[116 - (4 + 110)]] = v61[v86[587 - (57 + 527)]]; 												v78 = v78 + (1428 - (41 + 1386)); 												v86 = v74[v78]; 												v84[v86[2]] = v61[v86[106 - ((106 - (40 + 49)) + (327 - 241))]]; 												v78 = v78 + 1 + 0; 												v86 = v74[v78]; 												v138 = v86[3 - 1]; 												v137 = v84[v86[8 - 5]]; 												v84[v138 + (167 - (122 + 44))] = v137; 												v84[v138] = v137[v86[6 - 2]]; 												v78 = v78 + (3 - 2); 												v86 = v74[v78]; 												v84[v86[2 + 0]] = v86[(491 - (99 + 391)) + 2 + 0]; 												v78 = v78 + (1 - 0); 												v86 = v74[v78]; 												v138 = v86[67 - (30 + 35)]; 												v135, v136 = v77(v84[v138](v13(v84, v138 + 1 + 0, v86[1260 - (1043 + (940 - 726))]))); 												v79 = (v136 + v138) - (3 - 2); 												v134 = 1212 - (323 + 889); 												for v657 = v138, v79 do 													v134 = v134 + (2 - 1); 													v84[v657] = v135[v134]; 												end 												v78 = v78 + (581 - (361 + 219)); 												v86 = v74[v78]; 												v138 = v86[322 - (53 + 267)]; 												v84[v138] = v84[v138](v13(v84, v138 + (2 - 1) + 0 + 0, v79)); 												v78 = v78 + (414 - (15 + 398)); 												v86 = v74[v78]; 												v84[v86[5 - 3]](); 												v78 = v78 + (983 - (18 + 964)); 												v86 = v74[v78]; 												do 													return; 												end 											end 										elseif (v87 == 2) then 											local v153 = 0 - 0; 											local v154; 											local v155; 											while true do 												if (v153 == (2 + 0)) then 													v84[v155](v13(v84, v155 + 1, v86[2 + 1])); 													v78 = v78 + ((2455 - (1032 + 572)) - (20 + 830)); 													v86 = v74[v78]; 													v153 = 3; 												end 												if (v153 == (0 + 0)) then 													v154 = nil; 													v155 = nil; 													v84[v86[128 - (116 + 10)]][v86[1 + 2]] = v84[v86[742 - (542 + 196)]]; 													v153 = 1 - 0; 												end 												if (v153 == (2 + 3)) then 													v84[v86[2]] = {}; 													v78 = v78 + 1 + 0; 													v86 = v74[v78]; 													v153 = (420 - (203 + 214)) + 3; 												end 												if ((v153 == ((1827 - (568 + 1249)) - 6)) or (392 > 2140)) then 													v84[v155] = v154[v86[9 - 5]]; 													v78 = v78 + (1552 - (1126 + 425)); 													v86 = v74[v78]; 													v153 = 410 - (118 + 225 + 62); 												end 												if (v153 == (11 - 8)) then 													v155 = v86[1123 - (118 + (2408 - 1405))]; 													v154 = v84[v86[8 - 5]]; 													v84[v155 + (378 - (142 + 235))] = v154; 													v153 = 18 - 14; 												end 												if (v153 == (1 + 0)) then 													v78 = v78 + 1; 													v86 = v74[v78]; 													v155 = v86[2]; 													v153 = 979 - ((2135 - 1582) + 424); 												end 												if ((v153 == ((1316 - (913 + 393)) - 4)) or (4531 <= 3105)) then 													v84[v86[2 + 0]][v86[3 + 0]] = v86[3 + (2 - 1)]; 													break; 												end 											end 										else 											local v156 = 0 + 0; 											local v157; 											local v158; 											while true do 												if (v156 == (3 + 2)) then 													v84[v86[4 - 2]] = {}; 													v78 = v78 + 1; 													v86 = v74[v78]; 													v156 = 16 - 10; 												end 												if (v156 == (0 - (0 - 0))) then 													v157 = nil; 													v158 = nil; 													v84[v86[1 + 1]][v86[3]] = v84[v86[19 - 15]]; 													v156 = 754 - (239 + 514); 												end 												if (v156 == (2 + 2)) then 													v84[v158] = v157[v86[4]]; 													v78 = v78 + (1330 - (797 + 532)); 													v86 = v74[v78]; 													v156 = 4 + 1; 												end 												if (v156 == (2 + 1)) then 													v158 = v86[4 - 2]; 													v157 = v84[v86[1205 - (373 + 829)]]; 													v84[v158 + (732 - (476 + 255))] = v157; 													v156 = 1134 - (369 + 761); 												end 												if (v156 == ((412 - (269 + 141)) + 0)) then 													v84[v158](v13(v84, v158 + (1 - (0 - 0)), v86[3])); 													v78 = v78 + (1 - (1981 - (362 + 1619))); 													v86 = v74[v78]; 													v156 = 3; 												end 												if (v156 == (239 - (64 + (1799 - (950 + 675))))) then 													v78 = v78 + 1; 													v86 = v74[v78]; 													v158 = v86[1 + 1]; 													v156 = 2 - 0; 												end 												if ((3863 == 3863) and ((342 - (144 + 192)) == v156)) then 													v84[v86[218 - (42 + 68 + 106)]][v86[3 + 0]] = v86[4 + 0]; 													break; 												end 											end 										end 									elseif (v87 <= (3 + 2)) then 										if (v87 == (1508 - (363 + (2320 - (216 + 963))))) then 											local v159; 											local v160; 											v84[v86[2]][v86[1583 - (1183 + 397)]] = v84[v86[11 - 7]]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v160 = v86[2 + 0]; 											v84[v160](v13(v84, v160 + 1 + 0, v86[1978 - (1913 + 62)])); 											v78 = v78 + 1; 											v86 = v74[v78]; 											v160 = v86[2 + 0]; 											v159 = v84[v86[3]]; 											v84[v160 + 1] = v159; 											v84[v160] = v159[v86[10 - 6]]; 											v78 = v78 + ((3221 - (485 + 802)) - (565 + 1368)); 											v86 = v74[v78]; 											v84[v86[7 - 5]] = {}; 											v78 = v78 + (1662 - ((2036 - (432 + 127)) + 184)); 											v86 = v74[v78]; 											v84[v86[2 - 0]][v86[3]] = v86[(1077 - (1065 + 8)) + 0]; 										else 											v84[v86[858 - (564 + 292)]](); 										end 									elseif (v87 == 6) then 										v84[v86[2 - 0]] = v61[v86[8 - (3 + 2)]]; 									else 										v84[v86[306 - (244 + 60)]] = v84[v86[3 + 0]][v86[480 - (41 + 435)]]; 									end 								elseif (v87 <= (1012 - (938 + 63))) then 									if ((3203 > 2189) and (v87 <= (7 + 2))) then 										if ((989 < 4245) and (v87 > (1133 - (936 + 189)))) then 											local v176; 											local v177; 											v84[v86[2]] = {}; 											v78 = v78 + (1602 - (635 + 966)) + 0; 											v86 = v74[v78]; 											v84[v86[1615 - (1126 + 439 + 48)]][v86[2 + 1]] = v86[1142 - (782 + 356)]; 											v78 = v78 + (268 - (176 + (133 - (5 + 37)))); 											v86 = v74[v78]; 											v84[v86[4 - 2]][v86[(9 - 5) - 1]] = v86[4]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[2]][v86[1095 - (406 + 569 + 117)]] = v86[1879 - (157 + 1718)]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v177 = v86[6 - 4]; 											v84[v177] = v84[v177](v13(v84, v177 + (3 - 2), v86[1021 - (697 + 321)])); 											v78 = v78 + 1; 											v86 = v74[v78]; 											v177 = v86[5 - 3]; 											v176 = v84[v86[3]]; 											v84[v177 + (1 - 0)] = v176; 											v84[v177] = v176[v86[8 - 4]]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[3 - 1]] = {}; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[2]][v86[7 - 4]] = v86[1231 - (322 + 905)]; 											v78 = v78 + (612 - ((952 - 350) + 9)); 											v86 = v74[v78]; 											v177 = v86[1191 - (449 + 740)]; 											v84[v177] = v84[v177](v13(v84, v177 + (873 - (826 + 46)), v86[3])); 											v78 = v78 + (948 - (245 + 329 + 373)); 											v86 = v74[v78]; 											v177 = v86[6 - 4]; 											v176 = v84[v86[1 + 2]]; 											v84[v177 + (1899 - (260 + 1638))] = v176; 											v84[v177] = v176[v86[444 - (382 + 58)]]; 										else 											local v199 = 0; 											local v200; 											local v201; 											local v202; 											local v203; 											local v204; 											while true do 												if (v199 == (3 - 2)) then 													v86 = v74[v78]; 													v84[v86[2 + 0]] = v61[v86[5 - 2]]; 													v78 = v78 + (2 - 1); 													v86 = v74[v78]; 													v204 = v86[1207 - (902 + 303)]; 													v203 = v84[v86[5 - 2]]; 													v199 = 4 - 2; 												end 												if ((1 + 4) == v199) then 													v84[v86[1692 - (1121 + (1181 - 612))]](); 													v78 = v78 + (215 - (22 + 192)); 													v86 = v74[v78]; 													do 														return; 													end 													break; 												end 												if (v199 == (0 - 0)) then 													v200 = nil; 													v201, v202 = nil; 													v203 = nil; 													v204 = nil; 													v84[v86[685 - (483 + (377 - 177))]] = v61[v86[3]]; 													v78 = v78 + (1464 - (1404 + 59)); 													v199 = (4 - 2) - 1; 												end 												if ((4 - 0) == v199) then 													v78 = v78 + (766 - (468 + 297)); 													v86 = v74[v78]; 													v204 = v86[564 - (334 + 228)]; 													v84[v204] = v84[v204](v13(v84, v204 + (3 - 2), v79)); 													v78 = v78 + 1; 													v86 = v74[v78]; 													v199 = 11 - 6; 												end 												if (v199 == 2) then 													v84[v204 + (1 - 0)] = v203; 													v84[v204] = v203[v86[4]]; 													v78 = v78 + 1 + 0; 													v86 = v74[v78]; 													v84[v86[238 - (141 + 95)]] = v86[3 + 0]; 													v78 = v78 + (2 - 1); 													v199 = 6 - 3; 												end 												if (v199 == (1 + 2)) then 													v86 = v74[v78]; 													v204 = v86[2]; 													v201, v202 = v77(v84[v204](v13(v84, v204 + (2 - 1), v86[3 + 0]))); 													v79 = (v202 + v204) - (1 + 0); 													v200 = 0 - 0; 													for v1294 = v204, v79 do 														v200 = v200 + 1 + 0; 														v84[v1294] = v201[v200]; 													end 													v199 = 4; 												end 											end 										end 									elseif (v87 > 10) then 										for v660 = v86[165 - (92 + 71)], v86[2 + 1] do 											v84[v660] = nil; 										end 									else 										local v205; 										local v206; 										v84[v86[2]][v86[4 - 1]] = v84[v86[769 - (574 + 191)]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v206 = v86[4 - 2]; 										v84[v206](v13(v84, v206 + 1 + 0, v86[3])); 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v206 = v86[851 - (254 + 595)]; 										v205 = v84[v86[3]]; 										v84[v206 + (127 - ((584 - (318 + 211)) + 71))] = v205; 										v84[v206] = v205[v86[5 - (4 - 3)]]; 										v78 = v78 + ((3378 - (963 + 624)) - (573 + 1217)); 										v86 = v74[v78]; 										v84[v86[(3 + 2) - 3]] = {}; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v84[v86[2 - (846 - (518 + 328))]][v86[942 - ((1663 - 949) + 225)]] = v86[11 - 7]; 									end 								elseif (v87 <= 13) then 									if (v87 == (16 - 4)) then 										local v219 = v86[2]; 										v84[v219](v84[v219 + 1]); 									else 										local v220; 										local v221, v222; 										local v223; 										local v224; 										v84[v86[1 + 1]] = v61[v86[3 - 0]]; 										v78 = v78 + (807 - (118 + 688)); 										v86 = v74[v78]; 										v84[v86[50 - (25 + 23)]] = v61[v86[1 + 2]]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v224 = v86[1888 - (927 + 959)]; 										v223 = v84[v86[10 - 7]]; 										v84[v224 + 1] = v223; 										v84[v224] = v223[v86[736 - (16 + 716)]]; 										v78 = v78 + (1 - 0); 										v86 = v74[v78]; 										v84[v86[99 - (11 + 86)]] = v86[6 - 3]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v224 = v86[287 - (175 + 110)]; 										v221, v222 = v77(v84[v224](v13(v84, v224 + (2 - 1), v86[14 - (17 - 6)]))); 										v79 = (v222 + v224) - ((2114 - (301 + 16)) - (503 + 1293)); 										v220 = (0 - 0) - 0; 										for v662 = v224, v79 do 											local v663 = 0 + 0; 											while true do 												if (0 == v663) then 													v220 = v220 + ((2982 - 1920) - (810 + 251)); 													v84[v662] = v221[v220]; 													break; 												end 											end 										end 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v224 = v86[1 + 1]; 										v84[v224] = v84[v224](v13(v84, v224 + 1 + 0, v79)); 										v78 = v78 + (534 - (43 + 490)); 										v86 = v74[v78]; 										v84[v86[735 - (711 + 22)]](); 										v78 = v78 + 1; 										v86 = v74[v78]; 										do 											return; 										end 									end 								elseif (v87 <= (53 - 39)) then 									local v239 = 859 - (240 + 619); 									local v240; 									local v241; 									local v242; 									local v243; 									local v244; 									while true do 										if (v239 == 0) then 											v240 = nil; 											v241, v242 = nil; 											v243 = nil; 											v244 = nil; 											v84[v86[1 + 1]] = v61[v86[4 - 1]]; 											v239 = 1; 										end 										if (v239 == (1 + 4)) then 											v86 = v74[v78]; 											v244 = v86[1746 - (1344 + 400)]; 											v84[v244] = v84[v244](v13(v84, v244 + (406 - (255 + 150)), v79)); 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v239 = 4 + 2; 										end 										if ((15 <= 390) and (v239 == ((31 - 19) - 9))) then 											v86 = v74[v78]; 											v84[v86[2]] = v86[(9 + 0) - 6]; 											v78 = v78 + (1740 - (404 + 1335)); 											v86 = v74[v78]; 											v244 = v86[408 - (183 + 223)]; 											v239 = 4 - 0; 										end 										if ((1 + 0) == v239) then 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[2]] = v61[v86[340 - (10 + 186 + 141)]]; 											v78 = v78 + 1 + (0 - 0); 											v86 = v74[v78]; 											v239 = 340 - (118 + 133 + 87); 										end 										if ((2545 >= 1717) and (v239 == (2 + 2))) then 											v241, v242 = v77(v84[v244](v13(v84, v244 + (450 - (108 + 33 + 308)), v86[3]))); 											v79 = (v242 + v244) - (1 + 0); 											v240 = 0; 											for v1299 = v244, v79 do 												local v1300 = 0 - 0; 												while true do 													if ((1493 - (711 + 782)) == v1300) then 														v240 = v240 + (1 - 0); 														v84[v1299] = v241[v240]; 														break; 													end 												end 											end 											v78 = v78 + (470 - (270 + (632 - 433))); 											v239 = 2 + 3; 										end 										if (v239 == (1825 - (580 + 1239))) then 											v84[v86[5 - (1 + 2)]](); 											v78 = v78 + 1; 											v86 = v74[v78]; 											do 												return; 											end 											break; 										end 										if (v239 == (2 + 0)) then 											v244 = v86[2]; 											v243 = v84[v86[1 + 2]]; 											v84[v244 + 1] = v243; 											v84[v244] = v243[v86[2 + 2]]; 											v78 = v78 + 1; 											v239 = 7 - 4; 										end 									end 								elseif (v87 > (10 + 5)) then 									local v695 = 1167 - (645 + 522); 									local v696; 									local v697; 									local v698; 									while true do 										if (v695 == (1794 - (1010 + 780))) then 											v84[v86[2]] = v86[3 + 0]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v698 = v86[9 - 7]; 											v695 = 14 - 9; 										end 										if ((v695 == (1838 - (1045 + 791))) or (4635 == 118)) then 											v78 = v78 + (2 - 1); 											v86 = v74[v78]; 											v84[v86[2 - 0]][v86[508 - (351 + 154)]] = v86[1578 - (1281 + 293)]; 											v78 = v78 + (267 - (28 + 238)); 											v695 = 3; 										end 										if (v695 == (6 - 3)) then 											v86 = v74[v78]; 											v84[v86[1561 - (1381 + 178)]] = {}; 											v78 = v78 + 1 + (1019 - (829 + 190)); 											v86 = v74[v78]; 											v695 = 4 + 0; 										end 										if (v695 == 0) then 											v696 = nil; 											v697 = nil; 											v698 = nil; 											v698 = v86[1 + 1]; 											v695 = 3 - 2; 										end 										if ((1226 < 3232) and (v695 == (3 + 2))) then 											v697 = v84[v698]; 											v696 = v86[473 - (381 + 89)]; 											for v1361 = 1, v696 do 												v697[v1361] = v84[v698 + v1361]; 											end 											break; 										end 										if ((1 + 0) == v695) then 											v84[v698] = v84[v698](); 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[(7 - 5) - 0]] = {}; 											v695 = 1158 - ((1358 - 284) + 82); 										end 									end 								else 									local v699 = v86[3 - 1]; 									v84[v699] = v84[v699](v13(v84, v699 + (1785 - (214 + 1570)), v86[3])); 								end 							elseif (v87 <= 25) then 								if ((3767 > 706) and (v87 <= (1475 - (990 + 465)))) then 									if (v87 <= (8 + 10)) then 										if (v87 > (8 + 9)) then 											local v245 = 0 + 0; 											local v246; 											local v247; 											while true do 												if (v245 == 0) then 													v246 = v86[7 - 5]; 													v247 = v84[v246]; 													v245 = 1727 - (1668 + 58); 												end 												if ((3292 >= 1475) and (v245 == (627 - (512 + 114)))) then 													for v1301 = v246 + 1, v86[7 - 4] do 														v7(v247, v84[v1301]); 													end 													break; 												end 											end 										else 											local v248; 											local v249; 											v84[v86[2]][v86[5 - 2]] = v84[v86[13 - 9]]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v249 = v86[1 + 1]; 											v84[v249](v13(v84, v249 + 1, v86[3 + 0])); 											v78 = v78 + 1; 											v86 = v74[v78]; 											v249 = v86[6 - (5 - 1)]; 											v248 = v84[v86[3]]; 											v84[v249 + (1995 - (109 + 1885))] = v248; 											v84[v249] = v248[v86[1473 - (1269 + 200)]]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v84[v86[(2029 - 1212) - (98 + 717)]] = {}; 											v78 = v78 + (827 - (802 + 24)); 											v86 = v74[v78]; 											v84[v86[2 - 0]][v86[3]] = v86[4 - 0]; 										end 									elseif (v87 > (3 + 4 + 12)) then 										local v262; 										local v263, v264; 										local v265; 										local v266; 										v84[v86[2 + 0]] = v61[v86[1 + 2]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v84[v86[1 + 1]] = v61[v86[8 - 5]]; 										v78 = v78 + (3 - 2); 										v86 = v74[v78]; 										v266 = v86[2]; 										v265 = v84[v86[(5 - 3) + 1]]; 										v84[v266 + 1 + 0] = v265; 										v84[v266] = v265[v86[4 + 0 + 0]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v84[v86[1 + (614 - (520 + 93))]] = v86[1436 - (797 + 636)]; 										v78 = v78 + (4 - 3); 										v86 = v74[v78]; 										v266 = v86[1621 - (1427 + (468 - (259 + 17)))]; 										v263, v264 = v77(v84[v266](v13(v84, v266 + 1 + 0 + 0, v86[3]))); 										v79 = (v264 + v266) - 1; 										v262 = (0 + 0) - 0; 										for v664 = v266, v79 do 											v262 = v262 + 1; 											v84[v664] = v263[v262]; 										end 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v266 = v86[2]; 										v84[v266] = v84[v266](v13(v84, v266 + 1 + 0, v79)); 										v78 = v78 + 1; 										v86 = v74[v78]; 										v266 = v86[328 - (192 + (453 - 319))]; 										v84[v266] = v84[v266](); 										v78 = v78 + (1277 - (316 + 960)); 										v86 = v74[v78]; 										v266 = v86[2 + 0]; 										v265 = v84[v86[594 - (396 + 195)]]; 										v84[v266 + (2 - 1)] = v265; 										v84[v266] = v265[v86[4 + 0]]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[2 + 0]] = {}; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[7 - 5]][v86[554 - (83 + 468)]] = v86[1810 - (1202 + 604)]; 									else 										local v287; 										local v288; 										v84[v86[9 - 7]][v86[3]] = v86[(1767 - (440 + 1321)) - 2]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[5 - 3]][v86[328 - (45 + 280)]] = v86[4 + (1829 - (1059 + 770))]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v288 = v86[1 + 1]; 										v84[v288] = v84[v288](v13(v84, v288 + 1, v86[2 + 1])); 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v288 = v86[2]; 										v287 = v84[v86[5 - 2]]; 										v84[v288 + ((8841 - 6929) - (340 + 1571))] = v287; 										v84[v288] = v287[v86[2 + 2]]; 										v78 = v78 + (546 - (424 + 121)); 										v86 = v74[v78]; 										v84[v86[1774 - (1733 + 39)]] = {}; 										v78 = v78 + ((1 + 1) - 1); 										v86 = v74[v78]; 										v84[v86[2]][v86[3]] = v86[1038 - (125 + 909)]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[(3297 - (641 + 706)) - (435 + 661 + 852)]][v86[2 + 1]] = v86[5 - (441 - (249 + 191))]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v84[v86[2]][v86[515 - (409 + 103)]] = v86[240 - ((200 - 154) + 190)]; 										v78 = v78 + (96 - (51 + 44)); 										v86 = v74[v78]; 										v84[v86[1 + 1]][v86[1 + 2]] = v86[4]; 										v78 = v78 + (1318 - ((4293 - 3179) + 203)); 										v86 = v74[v78]; 										v288 = v86[728 - ((655 - (183 + 244)) + 498)]; 										v84[v288](v13(v84, v288 + 1 + 0, v86[2 + 1])); 									end 								elseif ((v87 <= (685 - (9 + 165 + 489))) or (4773 < 1343)) then 									if (v87 > (54 - 33)) then 										local v310; 										local v311; 										v84[v86[2]][v86[1908 - (830 + 1075)]] = v84[v86[528 - ((1033 - (434 + 296)) + 221)]]; 										v78 = v78 + (1270 - (231 + 1038)); 										v86 = v74[v78]; 										v311 = v86[2 + (0 - 0)]; 										v84[v311](v13(v84, v311 + (1163 - (171 + (1503 - (169 + 343)))), v86[3])); 										v78 = v78 + (4 - 3); 										v86 = v74[v78]; 										v311 = v86[2]; 										v310 = v84[v86[7 - 4]]; 										v84[v311 + (2 - 1)] = v310; 										v84[v311] = v310[v86[4 + 0]]; 										v78 = v78 + (3 - (2 + 0)); 										v86 = v74[v78]; 										v84[v86[(8 - 3) - 3]] = {}; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[2 - (0 - 0)]][v86[9 - 6]] = v86[1252 - (111 + 1137)]; 										v78 = v78 + (159 - (91 + 67)); 										v86 = v74[v78]; 										v84[v86[2 + 0]][v86[3]] = v86[11 - 7]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[2]][v86[1 + 2]] = v86[(1494 - 967) - ((1546 - (651 + 472)) + 100)]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v311 = v86[5 - 3]; 										v84[v311] = v84[v311](v13(v84, v311 + 1 + 0, v86[774 - (326 + 445)])); 										v78 = v78 + (4 - 3); 										v86 = v74[v78]; 										v311 = v86[(4 + 0) - 2]; 										v310 = v84[v86[2 + 1]]; 										v84[v311 + 1] = v310; 										v84[v311] = v310[v86[9 - 5]]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[713 - (530 + 181)]] = {}; 									else 										local v334; 										local v335, v336; 										local v337; 										local v338; 										v84[v86[883 - (614 + 267)]] = v61[v86[(42 - 7) - (19 + 13)]]; 										v78 = v78 + (1 - 0); 										v86 = v74[v78]; 										v84[v86[4 - (485 - (397 + 86))]] = v61[v86[8 - 5]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v338 = v86[3 - 1]; 										v337 = v84[v86[6 - (879 - (423 + 453))]]; 										v84[v338 + 1] = v337; 										v84[v338] = v337[v86[1816 - (1293 + 519)]]; 										v78 = v78 + ((1 + 0) - 0); 										v86 = v74[v78]; 										v84[v86[4 - 2]] = v86[5 - 2]; 										v78 = v78 + (4 - 3); 										v86 = v74[v78]; 										v84[v86[1 + 1]] = v86[6 - 3] ~= (0 + 0); 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v338 = v86[2]; 										v335, v336 = v77(v84[v338](v13(v84, v338 + (2 - 1), v86[1 + 2]))); 										v79 = (v336 + v338) - 1; 										v334 = 0 + 0; 										for v667 = v338, v79 do 											v334 = v334 + 1 + 0; 											v84[v667] = v335[v334]; 										end 										v78 = v78 + (1097 - (709 + 338 + 49)); 										v86 = v74[v78]; 										v338 = v86[(1485 + 375) - (673 + 1185)]; 										v84[v338] = v84[v338](v13(v84, v338 + (2 - 1), v79)); 										v78 = v78 + (3 - 2); 										v86 = v74[v78]; 										v84[v86[2 - 0]](); 										v78 = v78 + 1 + 0 + 0; 										v86 = v74[v78]; 										do 											return; 										end 									end 								elseif ((v87 <= (18 + 5)) or (1751 < 1528)) then 									local v354 = 0 - 0; 									local v355; 									local v356; 									local v357; 									local v358; 									local v359; 									while true do 										if (v354 == (3 + 6)) then 											v86 = v74[v78]; 											v84[v86[3 - 1]] = {}; 											v78 = v78 + ((1191 - (50 + 1140)) - 0); 											v86 = v74[v78]; 											v84[v86[1882 - (446 + 1434)]][v86[1286 - (899 + 141 + 243)]] = v86[11 - 7]; 											v78 = v78 + (1848 - (559 + 1288)); 											v86 = v74[v78]; 											v84[v86[1933 - (609 + 1322)]] = {}; 											v354 = 464 - (13 + 441); 										end 										if ((941 < 4267) and (v354 == ((9 + 5) - 10))) then 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[5 - 3]] = {}; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[9 - (1 + 6)]][v86[1 + 2]] = v86[14 - 10]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v354 = 3 + 2; 										end 										if (v354 == (56 - 37)) then 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[3 - 1]][v86[2 + (1 - 0)]] = v86[3 + 1]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[2 + 0]][v86[3]] = v84[v86[4]]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v354 = 20 + 0; 										end 										if (v354 == (446 - (153 + 280))) then 											v78 = v78 + (2 - 1); 											v86 = v74[v78]; 											v84[v86[2]][v86[3 + 0]] = v86[2 + 2]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[2 + 0 + 0]][v86[(599 - (157 + 439)) + 0]] = v86[3 + 1]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v354 = 14; 										end 										if ((1526 >= 1264) and (v354 == 10)) then 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v84[v86[(2 - 0) + 0]][v86[(2226 - 1556) - (89 + 578)]] = v86[3 + (2 - 1)]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[3 - (919 - (782 + 136))]][v86[3]] = v86[1053 - (572 + 477)]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v354 = 2 + 9; 										end 										if ((v354 == ((857 - (112 + 743)) + (1171 - (1026 + 145)))) or (3492 <= 964)) then 											v84[v86[1 + 1]][v86[89 - (84 + 2)]] = v86[6 - 2]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[844 - (497 + 345)]][v86[3]] = v86[1 + 3]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[2]][v86[(230 + 1106) - (605 + 728)]] = v84[v86[3 + 1]]; 											v78 = v78 + (1 - 0); 											v354 = 1 + (720 - (493 + 225)); 										end 										if (v354 == (51 - 37)) then 											v84[v86[2]][v86[(11 - 8) + 0]] = v84[v86[10 - 6]]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[2 + 0]] = {}; 											v78 = v78 + (490 - (278 + 179 + 32)); 											v86 = v74[v78]; 											v84[v86[2]][v86[3]] = v86[4]; 											v78 = v78 + 1 + 0; 											v354 = 15; 										end 										if (16 == v354) then 											v78 = v78 + (1403 - (832 + 570)); 											v86 = v74[v78]; 											v84[v86[2 + 0]][v86[1 + 2]] = v86[13 - 9]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[798 - (588 + 208)]][v86[8 - 5]] = v86[4]; 											v78 = v78 + (1801 - (884 + 916)); 											v86 = v74[v78]; 											v354 = 35 - 18; 										end 										if (v354 == (13 + (23 - 14))) then 											v78 = v78 + (654 - (232 + 421)); 											v86 = v74[v78]; 											v84[v86[1891 - (30 + 1539 + 320)]][v86[1 + (5 - 3)]] = v86[1 + 3]; 											v78 = v78 + ((1 + 2) - 2); 											v86 = v74[v78]; 											v84[v86[2]] = {}; 											v78 = v78 + (606 - (316 + (482 - 193))); 											v86 = v74[v78]; 											v354 = 59 - 36; 										end 										if ((v354 == (1602 - (210 + 1385))) or (2726 == 4578)) then 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[1455 - (666 + 787)]] = {}; 											v78 = v78 + (426 - (360 + 65)); 											v86 = v74[v78]; 											v84[v86[2]][v86[3 + 0]] = v86[258 - (79 + 175)]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v354 = 7 + 1; 										end 										if (v354 == (0 - 0)) then 											v355 = nil; 											v356, v357 = nil; 											v358 = nil; 											v359 = nil; 											v84[v86[2]][v86[5 - 2]] = v86[4]; 											v78 = v78 + (900 - (503 + 396)); 											v86 = v74[v78]; 											v84[v86[2]][v86[3]] = v86[4]; 											v354 = 182 - (92 + 89); 										end 										if ((v354 == (10 - 4)) or (4623 == 1784)) then 											v86 = v74[v78]; 											v84[v86[2 + 0]][v86[2 + (1690 - (1201 + 488))]] = v86[15 - 11]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[4 - 2]][v86[3 + 0]] = v86[4]; 											v78 = v78 + 1 + 0 + 0; 											v86 = v74[v78]; 											v84[v86[5 - (5 - 2)]][v86[3]] = v84[v86[4]]; 											v354 = 7; 										end 										if ((546 <= 1071) and (v354 == 18)) then 											v86 = v74[v78]; 											v84[v86[1 + 1]][v86[3]] = v86[4]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v84[v86[1246 - (485 + 759)]] = {}; 											v78 = v78 + (2 - 1); 											v86 = v74[v78]; 											v84[v86[(2135 - 944) - (442 + 747)]][v86[1138 - (832 + 303)]] = v86[4]; 											v354 = (1550 - (352 + 233)) - (88 + 858); 										end 										if (v354 == (9 + 20)) then 											v355 = 0 + 0; 											for v1302 = v359, v79 do 												v355 = v355 + 1 + 0; 												v84[v1302] = v356[v355]; 											end 											v78 = v78 + (2 - 1); 											v86 = v74[v78]; 											v359 = v86[791 - (766 + 23)]; 											v84[v359] = v84[v359](v13(v84, v359 + (4 - 3), v79)); 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v354 = 79 - 49; 										end 										if (v354 == 5) then 											v84[v86[6 - 4]][v86[1076 - (1036 + 37)]] = v86[2 + 1 + 1]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v84[v86[2 + 0]][v86[3]] = v84[v86[1484 - (641 + (2385 - 1546))]]; 											v78 = v78 + (914 - (910 + 3)); 											v86 = v74[v78]; 											v84[v86[2]] = {}; 											v78 = v78 + ((576 - (489 + 85)) - 1); 											v354 = (3191 - (277 + 1224)) - (1466 + 218); 										end 										if (v354 == (10 + 10)) then 											v84[v86[1150 - (556 + 592)]] = {}; 											v78 = v78 + 1 + (1493 - (663 + 830)); 											v86 = v74[v78]; 											v84[v86[810 - (329 + 479)]][v86[857 - (174 + 680)]] = v86[13 - 9]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v84[v86[2 + 0 + 0]][v86[742 - (396 + 343)]] = v86[1 + 3]; 											v78 = v78 + ((3618 - 2140) - ((904 - (461 + 414)) + 243 + 1205)); 											v354 = 1410 - (135 + 1254); 										end 										if (v354 == (78 - 57)) then 											v86 = v74[v78]; 											v84[v86[2]][v86[13 - 10]] = v84[v86[3 + 1 + 0]]; 											v78 = v78 + (1528 - (389 + 1138)); 											v86 = v74[v78]; 											v84[v86[576 - (102 + 472)]][v86[3 + 0]] = v84[v86[3 + 1]]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[1547 - (320 + 1225)]] = {}; 											v354 = 38 - 16; 										end 										if (v354 == (8 + 4)) then 											v86 = v74[v78]; 											v84[v86[1466 - (157 + 1307)]][v86[1862 - (821 + 1038)]] = v86[9 - 5]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[1 + 1]][v86[1 + 2]] = v84[v86[6 - 2]]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[4 - 2]] = {}; 											v354 = 1039 - (834 + 192); 										end 										if (v354 == (1 + 0)) then 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[1 + 1]][v86[1 + 2]] = v86[5 - 1]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[306 - (300 + 4)]][v86[1 + 0 + 2]] = v86[10 - 6]; 											v78 = v78 + (363 - (112 + 250)); 											v86 = v74[v78]; 											v354 = 1 + 1; 										end 										if (23 == v354) then 											v84[v86[4 - (252 - (172 + 78))]][v86[2 + 1]] = v86[3 + 1]; 											v78 = v78 + (1 - 0) + 0; 											v86 = v74[v78]; 											v84[v86[1 + 1 + 0]][v86[3 + 0]] = v86[1418 - (1001 + 413)]; 											v78 = v78 + (2 - 1); 											v86 = v74[v78]; 											v84[v86[884 - (244 + 638)]][v86[3]] = v84[v86[697 - (627 + 66)]]; 											v78 = v78 + ((2 - 0) - 1); 											v354 = 626 - (512 + 90); 										end 										if ((v354 == (1921 - (1665 + 241))) or (4862 <= 3641)) then 											v86 = v74[v78]; 											v84[v86[719 - (373 + 344)]][v86[3]] = v86[2 + 2]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[5 - 3]][v86[3]] = v84[v86[4]]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v84[v86[1101 - (35 + 1064)]] = {}; 											v354 = 16; 										end 										if (v354 == (2 + 4 + 2)) then 											v84[v86[4 - 2]][v86[1 + 2]] = v86[4]; 											v78 = v78 + (1237 - (298 + 938)); 											v86 = v74[v78]; 											v84[v86[1261 - (233 + 343 + 683)]][v86[1669 - (636 + (1725 - 695))]] = v84[v86[3 + (1 - 0)]]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[1 + 0 + 1 + 0]][v86[1 + 2]] = v84[v86[225 - (55 + 166)]]; 											v78 = v78 + 1 + 0 + 0; 											v354 = 1 + 8; 										end 										if ((2850 > 997) and (26 == v354)) then 											v84[v86[2]][v86[11 - (31 - 23)]] = v84[v86[301 - (36 + 261)]]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v84[v86[(3191 - 1821) - (34 + 1334)]][v86[2 + 1]] = v84[v86[4 + 0]]; 											v78 = v78 + ((394 + 890) - (1035 + 248)); 											v86 = v74[v78]; 											v84[v86[23 - (20 + 1)]] = v61[v86[3]]; 											v78 = v78 + 1 + 0; 											v354 = 346 - (134 + 185); 										end 										if ((4180 <= 4502) and (v354 == (1158 - (549 + 584)))) then 											v78 = v78 + (686 - (314 + 371)); 											v86 = v74[v78]; 											v84[v86[6 - 4]][v86[3]] = v84[v86[972 - (478 + 490)]]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v84[v86[1174 - (786 + 386)]][v86[(6 + 3) - 6]] = v84[v86[1383 - (1055 + 324)]]; 											v78 = v78 + (1341 - (1093 + 247)); 											v86 = v74[v78]; 											v354 = 473 - (133 + 314); 										end 										if ((22 + 2) == v354) then 											v86 = v74[v78]; 											v84[v86[1 + 1 + 0]] = {}; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[7 - 5]][v86[9 - 6]] = v86[10 - 6]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[(217 - (199 + 14)) - 2]][v86[(7 - 5) + (1550 - (647 + 902))]] = v86[4]; 											v354 = 25; 										end 										if (v354 == (65 - 48)) then 											v84[v86[(17 - 11) - 4]][v86[3 + 0]] = v84[v86[9 - 5]]; 											v78 = v78 + ((922 - (85 + 148)) - (364 + 324)); 											v86 = v74[v78]; 											v84[v86[(1294 - (426 + 863)) - 3]][v86[6 - 3]] = v84[v86[4]]; 											v78 = v78 + (4 - 3) + 0; 											v86 = v74[v78]; 											v84[v86[8 - 6]] = {}; 											v78 = v78 + (1 - 0); 											v354 = 54 - 36; 										end 										if (v354 == (1298 - (1249 + 19))) then 											v84[v86[2 + 0]](); 											v78 = v78 + ((1657 - (873 + 781)) - 2); 											v86 = v74[v78]; 											v78 = v86[1089 - ((918 - 232) + 400)]; 											break; 										end 										if ((v354 == (22 + 5)) or (149 == 893)) then 											v86 = v74[v78]; 											v84[v86[231 - (73 + 156)]] = v61[v86[1 + 2]]; 											v78 = v78 + (812 - ((1946 - 1225) + 90)); 											v86 = v74[v78]; 											v359 = v86[1 + 1]; 											v358 = v84[v86[9 - 6]]; 											v84[v359 + (471 - (224 + 246))] = v358; 											v84[v359] = v358[v86[5 - 1]]; 											v354 = (22 + 29) - (84 - 61); 										end 										if (v354 == (2 + 9)) then 											v84[v86[1 + 1]][v86[3 + 0]] = v84[v86[7 - 3]]; 											v78 = v78 + (3 - 2); 											v86 = v74[v78]; 											v84[v86[515 - (203 + 310)]] = {}; 											v78 = v78 + (1994 - (1238 + 755)); 											v86 = v74[v78]; 											v84[v86[2]][v86[1 + 2]] = v86[1538 - ((1015 - 306) + 825)]; 											v78 = v78 + (1 - 0); 											v354 = 16 - (11 - 7); 										end 										if (v354 == 3) then 											v86 = v74[v78]; 											v84[v86[866 - ((2143 - (414 + 1533)) + 668)]] = {}; 											v78 = v78 + ((3 + 0) - 2); 											v86 = v74[v78]; 											v84[v86[557 - (443 + 112)]] = {}; 											v78 = v78 + ((1480 - (888 + 591)) - 0); 											v86 = v74[v78]; 											v84[v86[2]][v86[3]] = v86[(2162 - 1325) - (171 + 38 + 624)]; 											v354 = 4; 										end 										if (28 == v354) then 											v78 = v78 + (94 - (4 + 89)); 											v86 = v74[v78]; 											v84[v86[6 - 4]] = v86[2 + 1]; 											v78 = v78 + (4 - 3); 											v86 = v74[v78]; 											v359 = v86[1 + (3 - 2)]; 											v356, v357 = v77(v84[v359](v13(v84, v359 + (1487 - (35 + 1451)), v86[3]))); 											v79 = (v357 + v359) - (1454 - (11 + 17 + 1425)); 											v354 = 2022 - (941 + 1052); 										end 									end 								elseif ((1037 < 1746) and (v87 > (24 + 0))) then 									local v701; 									local v702; 									v84[v86[2]][v86[1517 - (822 + 692)]] = v84[v86[4]]; 									v78 = v78 + (1 - 0); 									v86 = v74[v78]; 									v702 = v86[1 + 1]; 									v84[v702](v13(v84, v702 + 1 + 0, v86[3])); 									v78 = v78 + (298 - (45 + 252)); 									v86 = v74[v78]; 									v702 = v86[2 + 0]; 									v701 = v84[v86[3]]; 									v84[v702 + 1] = v701; 									v84[v702] = v701[v86[2 + 2]]; 									v78 = v78 + 1; 									v86 = v74[v78]; 									v84[v86[1 + 1]] = {}; 									v78 = v78 + (2 - 1); 									v86 = v74[v78]; 									v84[v86[435 - (114 + 319)]][v86[3 - 0]] = v86[4 - 0]; 								else 									local v715; 									local v716, v717; 									local v718; 									local v719; 									v84[v86[2 + 0]] = v61[v86[4 - 1]]; 									v78 = v78 + (1 - 0); 									v86 = v74[v78]; 									v84[v86[1965 - (556 + 1407)]] = v61[v86[1209 - (741 + 465)]]; 									v78 = v78 + ((887 - 421) - (170 + 295)); 									v86 = v74[v78]; 									v719 = v86[2 + 0]; 									v718 = v84[v86[3 + (0 - 0)]]; 									v84[v719 + (2 - 1)] = v718; 									v84[v719] = v718[v86[4 + 0]]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[2 + 0]] = v86[1233 - (957 + 273)]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v719 = v86[1 + 1]; 									v716, v717 = v77(v84[v719](v13(v84, v719 + (3 - 2), v86[3]))); 									v79 = (v717 + v719) - 1; 									v715 = 0 - 0; 									for v1090 = v719, v79 do 										v715 = v715 + (2 - 1); 										v84[v1090] = v716[v715]; 									end 									v78 = v78 + (1679 - (136 + 1542)); 									v86 = v74[v78]; 									v719 = v86[2]; 									v84[v719] = v84[v719](v13(v84, v719 + (4 - (9 - 6)), v79)); 									v78 = v78 + ((1768 + 13) - (389 + 1391)); 									v86 = v74[v78]; 									v84[v86[2 + (0 - 0)]](); 									v78 = v78 + 1 + 0 + 0; 									v86 = v74[v78]; 									do 										return; 									end 								end 							elseif (v87 <= 29) then 								if (v87 <= (61 - (520 - (68 + 418)))) then 									if (v87 > (977 - (783 + 168))) then 										local v360 = 0; 										local v361; 										local v362; 										local v363; 										local v364; 										local v365; 										while true do 											if (v360 == 3) then 												v86 = v74[v78]; 												v365 = v86[(16 - 10) - 4]; 												v362, v363 = v77(v84[v365](v13(v84, v365 + 1, v86[3 + 0]))); 												v79 = (v363 + v365) - (312 - (309 + (3 - 1))); 												v361 = (0 + 0) - 0; 												for v1305 = v365, v79 do 													local v1306 = 1212 - (1090 + (1214 - (770 + 322))); 													while true do 														if (v1306 == (0 + 0)) then 															v361 = v361 + (3 - 2); 															v84[v1305] = v362[v361]; 															break; 														end 													end 												end 												v360 = 4; 											end 											if (v360 == (1 + 0)) then 												v86 = v74[v78]; 												v84[v86[1120 - (628 + 490)]] = v61[v86[3]]; 												v78 = v78 + 1 + 0; 												v86 = v74[v78]; 												v365 = v86[4 - 2]; 												v364 = v84[v86[13 - 10]]; 												v360 = 776 - (431 + 343); 											end 											if (2 == v360) then 												v84[v365 + (1 - (0 + 0))] = v364; 												v84[v365] = v364[v86[(4 + 7) - 7]]; 												v78 = v78 + 1 + 0; 												v86 = v74[v78]; 												v84[v86[1 + 1]] = v86[3]; 												v78 = v78 + (1696 - (556 + 1139)); 												v360 = 3; 											end 											if ((3738 >= 3692) and (v360 == 0)) then 												v361 = nil; 												v362, v363 = nil; 												v364 = nil; 												v365 = nil; 												v84[v86[2]] = v61[v86[18 - (6 + 9)]]; 												v78 = v78 + 1; 												v360 = 1 + 0; 											end 											if (v360 == (3 + 2)) then 												v84[v86[2]](); 												v78 = v78 + (170 - (28 + 141)); 												v86 = v74[v78]; 												do 													return; 												end 												break; 											end 											if (v360 == (2 + 2)) then 												v78 = v78 + 1; 												v86 = v74[v78]; 												v365 = v86[2 - 0]; 												v84[v365] = v84[v365](v13(v84, v365 + 1, v79)); 												v78 = v78 + 1 + 0; 												v86 = v74[v78]; 												v360 = 1322 - (486 + 831); 											end 										end 									else 										local v366; 										local v367, v368; 										local v369; 										local v370; 										v84[v86[2]] = v61[v86[7 - 4]]; 										v78 = v78 + (3 - 2); 										v86 = v74[v78]; 										v84[v86[1 + 1]] = v61[v86[9 - 6]]; 										v78 = v78 + (1264 - (668 + 595)); 										v86 = v74[v78]; 										v370 = v86[2]; 										v369 = v84[v86[3]]; 										v84[v370 + 1 + 0] = v369; 										v84[v370] = v369[v86[4]]; 										v78 = v78 + 1 + 0 + 0; 										v86 = v74[v78]; 										v84[v86[5 - 3]] = v86[293 - (23 + 267)]; 										v78 = v78 + (1945 - (1129 + 815)); 										v86 = v74[v78]; 										v370 = v86[389 - (371 + 16)]; 										v367, v368 = v77(v84[v370](v13(v84, v370 + (1751 - (1326 + 424)), v86[5 - (2 - 0)]))); 										v79 = (v368 + v370) - 1; 										v366 = 0; 										for v670 = v370, v79 do 											v366 = v366 + (3 - 2); 											v84[v670] = v367[v366]; 										end 										v78 = v78 + ((230 - 111) - (88 + 30)); 										v86 = v74[v78]; 										v370 = v86[773 - (720 + 51)]; 										v84[v370] = v84[v370](v13(v84, v370 + (2 - 1), v79)); 										v78 = v78 + (1777 - (421 + (3690 - 2335))); 										v86 = v74[v78]; 										v84[v86[2 - 0]](); 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										do 											return; 										end 									end 								elseif ((v87 == 28) or (3822 < 823)) then 									local v385; 									local v386, v387; 									local v388; 									local v389; 									v84[v86[2]] = v61[v86[(3994 - 2908) - (286 + 797)]]; 									v78 = v78 + (3 - 2); 									v86 = v74[v78]; 									v84[v86[2 - 0]] = v61[v86[442 - (397 + 42)]]; 									v78 = v78 + 1 + 0 + 0; 									v86 = v74[v78]; 									v389 = v86[(1200 - 398) - (24 + 776)]; 									v388 = v84[v86[4 - (1 + 0)]]; 									v84[v389 + 1] = v388; 									v84[v389] = v388[v86[(484 + 305) - (222 + 563)]]; 									v78 = v78 + (1 - 0); 									v86 = v74[v78]; 									v84[v86[2 + 0 + 0]] = v86[3]; 									v78 = v78 + (191 - (23 + 167)); 									v86 = v74[v78]; 									v389 = v86[1800 - (690 + 1108)]; 									v386, v387 = v77(v84[v389](v13(v84, v389 + 1 + 0, v86[3 + 0]))); 									v79 = (v387 + v389) - 1; 									v385 = 0; 									for v673 = v389, v79 do 										v385 = v385 + (849 - (40 + 808)); 										v84[v673] = v386[v385]; 									end 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v389 = v86[7 - 5]; 									v84[v389] = v84[v389](v13(v84, v389 + (3 - 2), v79)); 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[2]](); 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									do 										return; 									end 								else 									v84[v86[2 + 0]] = {}; 								end 							elseif (v87 <= (602 - (47 + 524))) then 								if (v87 > (20 + (13 - 3))) then 									local v405; 									local v406, v407; 									local v408; 									local v409; 									v84[v86[2]] = v61[v86[8 - 5]]; 									v78 = v78 + (1 - 0); 									v86 = v74[v78]; 									v84[v86[4 - 2]] = v61[v86[3]]; 									v78 = v78 + (1727 - (1165 + 561)); 									v86 = v74[v78]; 									v409 = v86[1 + 1]; 									v408 = v84[v86[3]]; 									v84[v409 + 1] = v408; 									v84[v409] = v408[v86[12 - 8]]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[481 - (341 + 138)]] = v86[1 + 2]; 									v78 = v78 + 1; 									v86 = v74[v78]; 									v409 = v86[3 - 1]; 									v406, v407 = v77(v84[v409](v13(v84, v409 + 1, v86[3]))); 									v79 = (v407 + v409) - (327 - (89 + 237)); 									v405 = 0 - 0; 									for v676 = v409, v79 do 										v405 = v405 + (1 - 0); 										v84[v676] = v406[v405]; 									end 									v78 = v78 + (882 - (581 + 300)); 									v86 = v74[v78]; 									v409 = v86[1222 - (855 + 365)]; 									v84[v409] = v84[v409](v13(v84, v409 + ((1 + 1) - 1), v79)); 									v78 = v78 + 1; 									v86 = v74[v78]; 									v84[v86[2]](); 									v78 = v78 + (4 - 3) + 0; 									v86 = v74[v78]; 									do 										return; 									end 								else 									local v424 = 1235 - (1030 + 205); 									local v425; 									local v426; 									while true do 										if ((v424 == ((16 - 11) + 0)) or (4962 == 3146)) then 											v84[v86[2 + 0]] = {}; 											v78 = v78 + ((119 + 168) - (156 + 130)); 											v86 = v74[v78]; 											v424 = 29 - 23; 										end 										if (v424 == 4) then 											v84[v426] = v425[v86[8 - 4]]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v424 = 10 - 5; 										end 										if ((v424 == (2 + (835 - (762 + 69)))) or (475 > 4146)) then 											v84[v86[2 + 0]][v86[72 - (10 + (190 - 131))]] = v86[2 + 2]; 											break; 										end 										if ((v424 == (2 + 0)) or (121 >= 129)) then 											v84[v426](v13(v84, v426 + 1, v86[14 - 11])); 											v78 = v78 + ((754 + 410) - (671 + (1189 - 697))); 											v86 = v74[v78]; 											v424 = 3 + 0; 										end 										if (v424 == (1215 - (369 + 846))) then 											v425 = nil; 											v426 = nil; 											v84[v86[2]][v86[1 + 0 + 1 + 1]] = v84[v86[4 + 0]]; 											v424 = 1946 - (1036 + 909); 										end 										if (v424 == (1 + 0)) then 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v426 = v86[205 - (11 + 192)]; 											v424 = 2 + (0 - 0); 										end 										if (((178 - (135 + 40)) == v424) or (2058 > 4958)) then 											v426 = v86[4 - 2]; 											v425 = v84[v86[2 + 1]]; 											v84[v426 + ((159 - (8 + 149)) - 1)] = v425; 											v424 = 5 - 1; 										end 									end 								end 							elseif (v87 <= 32) then 								v84[v86[178 - ((1370 - (1199 + 121)) + 126)]] = v86[8 - (8 - 3)] ~= (0 + 0); 							elseif (v87 > (1446 - (1233 + 180))) then 								local v733 = 0; 								local v734; 								local v735; 								local v736; 								local v737; 								while true do 									if ((1759 == 1759) and (v733 == (969 - (522 + 447)))) then 										v734 = v86[1423 - (107 + 1314)]; 										v735, v736 = v77(v84[v734](v13(v84, v734 + (2 - 1), v86[2 + 1]))); 										v733 = 2 - 1; 									end 									if ((v733 == 1) or (4543 == 358)) then 										v79 = (v736 + v734) - 1; 										v737 = 0; 										v733 = 1 + 1; 									end 									if ((2003 == 2003) and (v733 == (3 - 1))) then 										for v1364 = v734, v79 do 											local v1365 = 0 - 0; 											while true do 												if (((1910 - (716 + 1194)) == v1365) or (3 == 2368)) then 													v737 = v737 + 1 + 0; 													v84[v1364] = v735[v737]; 													break; 												end 											end 										end 										break; 									end 								end 							else 								local v738 = 0 + 0; 								local v739; 								local v740; 								local v741; 								local v742; 								local v743; 								while true do 									if ((v738 == (511 - (31 + 43 + 429))) or (2757 > 3968)) then 										v86 = v74[v78]; 										v84[v86[3 - 1]](); 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v738 = (71 - 51) - (25 - 14); 									end 									if ((812 <= 1870) and ((2 + 0) == v738)) then 										v78 = v78 + 1; 										v86 = v74[v78]; 										v743 = v86[5 - 3]; 										v742 = v84[v86[3]]; 										v738 = 7 - 4; 									end 									if (v738 == 7) then 										v86 = v74[v78]; 										v743 = v86[435 - (279 + 154)]; 										v84[v743] = v84[v743](v13(v84, v743 + 1, v79)); 										v78 = v78 + (779 - (454 + 287 + 37)); 										v738 = 8; 									end 									if ((3889 == 3889) and (v738 == 5)) then 										v78 = v78 + 1; 										v86 = v74[v78]; 										v743 = v86[(1809 - (518 + 1289)) + 0]; 										v740, v741 = v77(v84[v743](v13(v84, v743 + 1, v86[20 - (12 + 5)]))); 										v738 = 4 + 2; 									end 									if (v738 == 6) then 										v79 = (v741 + v743) - ((2 - 0) - 1); 										v739 = 0 + 0; 										for v1366 = v743, v79 do 											v739 = v739 + (1094 - (277 + 816)); 											v84[v1366] = v740[v739]; 										end 										v78 = v78 + (4 - 3); 										v738 = 1190 - (1058 + 17 + 108); 									end 									if ((2 + (10 - 3)) == v738) then 										do 											return; 										end 										break; 									end 									if (v738 == (976 - (815 + 160))) then 										v84[v86[8 - 6]] = v61[v86[7 - 4]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v84[v86[5 - 3]] = v61[v86[1901 - (41 + 1857)]]; 										v738 = 2; 									end 									if ((1893 - (1222 + 671)) == v738) then 										v739 = nil; 										v740, v741 = nil; 										v742 = nil; 										v743 = nil; 										v738 = 2 - 1; 									end 									if (v738 == (5 - (1 + 0))) then 										v84[v86[1184 - (229 + 953)]] = v86[1777 - (1111 + 663)]; 										v78 = v78 + (1580 - (874 + 705)); 										v86 = v74[v78]; 										v84[v86[1 + 1]] = v86[3 + 0] ~= 0; 										v738 = 10 - 5; 									end 									if (3 == v738) then 										v84[v743 + 1] = v742; 										v84[v743] = v742[v86[4]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v738 = 4; 									end 								end 							end 						elseif (v87 <= (731 - (642 + 37))) then 							if ((1411 < 2388) and (v87 <= (10 + 33))) then 								if (v87 <= 38) then 									if (v87 <= ((475 - (304 + 165)) + 30)) then 										if ((4771 == 4771) and (v87 > 35)) then 											v78 = v86[3]; 										else 											local v429 = (0 + 0) - 0; 											local v430; 											local v431; 											while true do 												if ((v429 == 1) or (98 >= 2345)) then 													v86 = v74[v78]; 													v431 = v86[456 - ((393 - (54 + 106)) + 221)]; 													v84[v431](v13(v84, v431 + (1970 - (1618 + 351)), v86[3])); 													v78 = v78 + 1; 													v429 = 4 - 2; 												end 												if (v429 == (2 + 0)) then 													v86 = v74[v78]; 													v431 = v86[1543 - (507 + 211 + 823)]; 													v430 = v84[v86[1019 - (10 + 1006)]]; 													v84[v431 + 1 + 0] = v430; 													v429 = 3; 												end 												if ((4297 > 1243) and (v429 == (808 - (266 + 539)))) then 													v84[v431] = v430[v86[(3 + 8) - 7]]; 													v78 = v78 + (1226 - (636 + 589)); 													v86 = v74[v78]; 													v84[v86[(1 + 3) - 2]] = {}; 													v429 = 4; 												end 												if (v429 == (0 - 0)) then 													v430 = nil; 													v431 = nil; 													v84[v86[2 + 0]][v86[2 + 1]] = v84[v86[1019 - ((2129 - 1472) + 358)]]; 													v78 = v78 + 1; 													v429 = 2 - 1; 												end 												if ((167 <= 4460) and (v429 == (8 - 4))) then 													v78 = v78 + (1034 - (912 + 121)); 													v86 = v74[v78]; 													v84[v86[1189 - (544 + 607 + 36)]][v86[3 + 0]] = v86[2 + (1291 - (1140 + 149))]; 													break; 												end 											end 										end 									elseif (v87 > 37) then 										local v432; 										local v433; 										v84[v86[2]][v86[8 - 5]] = v84[v86[1836 - (1552 + 280)]]; 										v78 = v78 + (835 - (41 + 23 + 770)); 										v86 = v74[v78]; 										v433 = v86[2 + 0]; 										v84[v433](v13(v84, v433 + (2 - 1), v86[1 + (2 - 0)])); 										v78 = v78 + (1244 - (157 + 1086)); 										v86 = v74[v78]; 										v433 = v86[3 - 1]; 										v432 = v84[v86[3]]; 										v84[v433 + (4 - 3)] = v432; 										v84[v433] = v432[v86[4]]; 										v78 = v78 + (1 - 0); 										v86 = v74[v78]; 										v84[v86[2 - 0]] = {}; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v84[v86[821 - (599 + 220)]][v86[3]] = v86[7 - 3]; 									else 										local v446 = 1931 - (1813 + 118); 										local v447; 										while true do 											if (v446 == (0 + 0)) then 												v447 = v86[2]; 												v84[v447](v13(v84, v447 + 1, v86[3])); 												break; 											end 										end 									end 								elseif ((v87 <= (1257 - (841 + 376))) or (3812 < 3081)) then 									if ((v87 == (53 - 14)) or (3611 > 4881)) then 										local v448 = 0 + 0; 										local v449; 										local v450; 										while true do 											if (v448 == (19 - 12)) then 												v78 = v78 + 1; 												v86 = v74[v78]; 												v84[v86[861 - (464 + 74 + 321)]] = {}; 												break; 											end 											if ((2187 < 3817) and (v448 == 4)) then 												v86 = v74[v78]; 												v84[v86[5 - 3]][v86[2 + 1]] = v86[(2878 - 2037) - (467 + 370)]; 												v78 = v78 + 1; 												v86 = v74[v78]; 												v84[v86[3 - 1]][v86[3 + 0]] = v86[13 - 9]; 												v448 = 5; 											end 											if ((428 <= 985) and (v448 == (1 - 0))) then 												v450 = v86[2]; 												v84[v450](v13(v84, v450 + 1 + 0, v86[6 - 3])); 												v78 = v78 + ((90 + 431) - (150 + 370)); 												v86 = v74[v78]; 												v450 = v86[(4455 - 3171) - (74 + 1208)]; 												v448 = 4 - 2; 											end 											if (v448 == (0 - 0)) then 												v449 = nil; 												v450 = nil; 												v84[v86[2]][v86[3 + 0]] = v84[v86[394 - (14 + 376)]]; 												v78 = v78 + (1 - 0); 												v86 = v74[v78]; 												v448 = (187 - (165 + 21)) + 0; 											end 											if (v448 == (5 + 0)) then 												v78 = v78 + 1 + (111 - (61 + 50)); 												v86 = v74[v78]; 												v450 = v86[(3 + 2) - 3]; 												v84[v450] = v84[v450](v13(v84, v450 + 1 + 0, v86[81 - (23 + 55)])); 												v78 = v78 + 1; 												v448 = 13 - 7; 											end 											if (v448 == (2 + 0)) then 												v449 = v84[v86[3]]; 												v84[v450 + 1 + 0] = v449; 												v84[v450] = v449[v86[5 - 1]]; 												v78 = v78 + 1 + 0; 												v86 = v74[v78]; 												v448 = 904 - (652 + 249); 											end 											if ((2952 >= 1023) and (v448 == 6)) then 												v86 = v74[v78]; 												v450 = v86[5 - 3]; 												v449 = v84[v86[1871 - (708 + 1160)]]; 												v84[v450 + (2 - 1)] = v449; 												v84[v450] = v449[v86[4]]; 												v448 = 12 - 5; 											end 											if (v448 == (30 - (10 + 17))) then 												v84[v86[1 + (4 - 3)]] = {}; 												v78 = v78 + 1; 												v86 = v74[v78]; 												v84[v86[1734 - (1400 + 332)]][v86[5 - 2]] = v86[2 + 2]; 												v78 = v78 + (1 - 0); 												v448 = 1912 - (242 + 1666); 											end 										end 									else 										local v451; 										local v452; 										v84[v86[1 + 1]][v86[3]] = v84[v86[4]]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v452 = v86[2]; 										v84[v452](v13(v84, v452 + 1, v86[2 + 1])); 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v452 = v86[942 - (850 + 90)]; 										v451 = v84[v86[4 - 1]]; 										v84[v452 + (1391 - (360 + (2490 - (1295 + 165))))] = v451; 										v84[v452] = v451[v86[4 + 0]]; 										v78 = v78 + (2 - 1); 										v86 = v74[v78]; 										v84[v86[2 - 0]] = {}; 										v78 = v78 + (1662 - (909 + 172 + 580)); 										v86 = v74[v78]; 										v84[v86[1225 - (109 + 1114)]][v86[5 - 2]] = v86[1 + 1 + 2]; 										v78 = v78 + (243 - (6 + 236)); 										v86 = v74[v78]; 										v84[v86[2 + 0]][v86[3 + 0]] = v86[(1405 - (819 + 578)) - 4]; 										v78 = v78 + (1 - 0); 										v86 = v74[v78]; 										v84[v86[1135 - (1076 + 57)]][v86[1 + 2]] = v86[693 - (579 + 110)]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v452 = v86[2 + (1402 - (331 + 1071))]; 										v84[v452] = v84[v452](v13(v84, v452 + (744 - (588 + 155)), v86[(1284 - (546 + 736)) + (1938 - (1834 + 103))])); 										v78 = v78 + (408 - (174 + 233)); 										v86 = v74[v78]; 										v452 = v86[2]; 										v451 = v84[v86[8 - 5]]; 										v84[v452 + (1 - (0 + 0))] = v451; 										v84[v452] = v451[v86[2 + 2]]; 										v78 = v78 + (1175 - (663 + 511)); 										v86 = v74[v78]; 										v84[v86[2 + 0]] = {}; 									end 								elseif (v87 <= (9 + 32)) then 									do 										return; 									end 								elseif ((554 <= 3482) and (v87 > (129 - 87))) then 									local v744; 									local v745; 									v84[v86[2 + 0]][v86[3]] = v84[v86[9 - (14 - 9)]]; 									v78 = v78 + (2 - 1); 									v86 = v74[v78]; 									v745 = v86[1 + 1]; 									v84[v745](v13(v84, v745 + (1 - 0), v86[3 + 0])); 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v745 = v86[724 - (478 + 244)]; 									v744 = v84[v86[520 - (440 + 77)]]; 									v84[v745 + 1 + 0] = v744; 									v84[v745] = v744[v86[4]]; 									v78 = v78 + (3 - 2); 									v86 = v74[v78]; 									v84[v86[1558 - (655 + 901)]] = {}; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[2]][v86[3 + 0]] = v86[3 + 1]; 								else 									local v758; 									local v759; 									v84[v86[7 - 5]][v86[1448 - (695 + 750)]] = v84[v86[(1779 - (1536 + 230)) - 9]]; 									v78 = v78 + 1; 									v86 = v74[v78]; 									v759 = v86[2 - 0]; 									v84[v759](v13(v84, v759 + (3 - 2), v86[354 - (285 + 66)])); 									v78 = v78 + (492 - (128 + 363)); 									v86 = v74[v78]; 									v759 = v86[4 - 2]; 									v758 = v84[v86[1313 - (682 + 628)]]; 									v84[v759 + 1 + 0] = v758; 									v84[v759] = v758[v86[303 - (176 + 123)]]; 									v78 = v78 + 1 + 0 + 0; 									v86 = v74[v78]; 									v84[v86[2 + 0]] = {}; 									v78 = v78 + (270 - ((594 - 355) + 30)); 									v86 = v74[v78]; 									v84[v86[1 + 1]][v86[3 + 0]] = v86[6 - 2]; 									v78 = v78 + 1; 									v86 = v74[v78]; 									v84[v86[5 - 3]][v86[318 - (306 + 9)]] = v86[13 - 9]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[2 + 0]][v86[2 + 1]] = v86[11 - (2 + 5)]; 									v78 = v78 + (1376 - (1140 + 235)); 									v86 = v74[v78]; 									v759 = v86[(2 - 0) + 0]; 									v84[v759] = v84[v759](v13(v84, v759 + 1 + 0, v86[1 + 2])); 									v78 = v78 + (53 - (33 + 19)); 									v86 = v74[v78]; 									v759 = v86[1 + 1]; 									v758 = v84[v86[8 - 5]]; 									v84[v759 + 1] = v758; 									v84[v759] = v758[v86[4]]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[2]] = {}; 								end 							elseif (v87 <= (92 - 45)) then 								if ((74 <= 3533) and (v87 <= (43 + 2))) then 									if (v87 == (733 - (586 + 103))) then 										local v474; 										local v475; 										v84[v86[1 + 1]] = v61[v86[(26 - 17) - 6]]; 										v78 = v78 + (1489 - ((3179 - 1870) + 179)); 										v86 = v74[v78]; 										v84[v86[2 - 0]] = v61[v86[3 + 0]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v475 = v86[5 - 3]; 										v474 = v84[v86[3 + 0]]; 										v84[v475 + 1] = v474; 										v84[v475] = v474[v86[7 - 3]]; 										v78 = v78 + (1 - 0); 										v86 = v74[v78]; 										v84[v86[611 - (295 + 314)]] = v86[6 - (1012 - (615 + 394))]; 										v78 = v78 + (1963 - (1300 + 662)); 										v86 = v74[v78]; 										v475 = v86[6 - 4]; 										v84[v475] = v84[v475](v13(v84, v475 + 1, v86[1758 - (1178 + 577)])); 										v78 = v78 + 1 + 0 + 0; 										v86 = v74[v78]; 										v84[v86[5 - (3 + 0)]] = v84[v86[1408 - (851 + 554)]][v86[(11 - 7) + (0 - 0)]]; 										v78 = v78 + ((653 - (59 + 592)) - 1); 										v86 = v74[v78]; 										v84[v86[3 - 1]] = v84[v86[3]][v86[306 - (115 + 187)]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v475 = v86[2 + 0]; 										v84[v475] = v84[v475](v84[v475 + (3 - 2)]); 										v78 = v78 + (1162 - (160 + 1001)); 										v86 = v74[v78]; 										v84[v86[2 + 0]](); 										v78 = v78 + 1; 										v86 = v74[v78]; 										do 											return; 										end 									else 										local v494; 										local v495; 										v84[v86[2 + (0 - 0)]][v86[5 - 2]] = v84[v86[362 - (237 + 121)]]; 										v78 = v78 + (898 - (525 + (684 - 312))); 										v86 = v74[v78]; 										v495 = v86[3 - 1]; 										v84[v495](v13(v84, v495 + (3 - 2), v86[145 - (96 + 46)])); 										v78 = v78 + (778 - (643 + 134)); 										v86 = v74[v78]; 										v495 = v86[2]; 										v494 = v84[v86[2 + 1]]; 										v84[v495 + (2 - 1)] = v494; 										v84[v495] = v494[v86[4]]; 										v78 = v78 + (3 - 2); 										v86 = v74[v78]; 										v84[v86[2 + 0]] = {}; 										v78 = v78 + (1 - 0); 										v86 = v74[v78]; 										v84[v86[3 - 1]][v86[3]] = v86[3 + 1]; 									end 								elseif (v87 == (765 - ((487 - (70 + 101)) + 403))) then 									local v508 = 0 + 0; 									local v509; 									local v510; 									local v511; 									while true do 										if (v508 == (2 - 1)) then 											v511 = v86[(4 - 2) + 1]; 											for v1307 = 2 - 1, v511 do 												v510[v1307] = v84[v509 + v1307]; 											end 											break; 										end 										if (v508 == 0) then 											v509 = v86[2 + 0]; 											v510 = v84[v509]; 											v508 = 1; 										end 									end 								else 									local v512 = 0 + 0 + 0; 									local v513; 									local v514; 									local v515; 									local v516; 									local v517; 									while true do 										if (v512 == 4) then 											v78 = v78 + (3 - (4 - 2)); 											v86 = v74[v78]; 											v517 = v86[(250 - (123 + 118)) - (2 + 5)]; 											v514, v515 = v77(v84[v517](v13(v84, v517 + (1 - 0), v86[1 + 2]))); 											v79 = (v515 + v517) - (1 - 0); 											v512 = 1 + 4; 										end 										if ((1 + 6) == v512) then 											v86 = v74[v78]; 											do 												return; 											end 											break; 										end 										if (v512 == (14 - 9)) then 											v513 = 17 - (12 + 5); 											for v1310 = v517, v79 do 												v513 = v513 + 1; 												v84[v1310] = v514[v513]; 											end 											v78 = v78 + (3 - 2); 											v86 = v74[v78]; 											v517 = v86[2]; 											v512 = 6; 										end 										if (v512 == ((1399 - (653 + 746)) - 0)) then 											v513 = nil; 											v514, v515 = nil; 											v516 = nil; 											v517 = nil; 											v84[v86[3 - 1]] = v61[v86[7 - 4]]; 											v512 = 1 + 0; 										end 										if ((1657 < 3319) and ((1974 - (1656 + 317)) == v512)) then 											v78 = v78 + 1 + (0 - 0); 											v86 = v74[v78]; 											v84[v86[2 + (0 - 0)]] = v61[v86[7 - 4]]; 											v78 = v78 + (4 - 3); 											v86 = v74[v78]; 											v512 = 5 - 3; 										end 										if ((360 - (5 + 349)) == v512) then 											v84[v517] = v84[v517](v13(v84, v517 + 1 + 0, v79)); 											v78 = v78 + (4 - 3); 											v86 = v74[v78]; 											v84[v86[(815 + 458) - (266 + 1005)]](); 											v78 = v78 + 1 + 0 + 0; 											v512 = 23 - 16; 										end 										if ((v512 == (3 - (0 + 0))) or (1616 == 1003)) then 											v86 = v74[v78]; 											v84[v86[1698 - (561 + 178 + 957)]] = v86[3 - 0]; 											v78 = v78 + (3 - 2); 											v86 = v74[v78]; 											v84[v86[1068 - (507 + 559)]] = v86[7 - 4] ~= (0 - (0 - 0)); 											v512 = 392 - (212 + 176); 										end 										if (v512 == 2) then 											v517 = v86[2]; 											v516 = v84[v86[908 - (250 + 655)]]; 											v84[v517 + (2 - 1)] = v516; 											v84[v517] = v516[v86[6 - 2]]; 											v78 = v78 + (1 - 0); 											v512 = 1959 - (1869 + 87); 										end 									end 								end 							elseif (v87 <= (169 - 120)) then 								if ((v87 > (1949 - (484 + 1349 + 68))) or (3672 <= 863)) then 									local v518 = 0; 									local v519; 									local v520; 									local v521; 									local v522; 									local v523; 									while true do 										if ((612 < 1082) and (v518 == 1)) then 											v86 = v74[v78]; 											v84[v86[4 - 2]] = v61[v86[4 - 1]]; 											v78 = v78 + (774 - (48 + 725)); 											v86 = v74[v78]; 											v523 = v86[2 - 0]; 											v522 = v84[v86[3]]; 											v518 = 5 - 3; 										end 										if ((2142 == 2142) and (v518 == (3 + 1))) then 											v78 = v78 + (2 - (1 - 0)); 											v86 = v74[v78]; 											v523 = v86[2]; 											v84[v523] = v84[v523](v13(v84, v523 + 1 + 0, v79)); 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v518 = 5; 										end 										if ((v518 == (853 - (152 + 701))) or (1680 < 749)) then 											v519 = nil; 											v520, v521 = nil; 											v522 = nil; 											v523 = nil; 											v84[v86[1313 - (430 + 881)]] = v61[v86[2 + 1]]; 											v78 = v78 + (896 - (557 + 338)); 											v518 = 1 + 0; 										end 										if (v518 == (14 - 9)) then 											v84[v86[2]](); 											v78 = v78 + (3 - 2); 											v86 = v74[v78]; 											do 												return; 											end 											break; 										end 										if ((7 - 4) == v518) then 											v86 = v74[v78]; 											v523 = v86[1236 - (885 + 349)]; 											v520, v521 = v77(v84[v523](v13(v84, v523 + (2 - 1), v86[3]))); 											v79 = (v521 + v523) - (802 - (499 + 302)); 											v519 = 0; 											for v1313 = v523, v79 do 												v519 = v519 + (867 - (39 + 827)); 												v84[v1313] = v520[v519]; 											end 											v518 = 10 - (5 + 1); 										end 										if ((v518 == (4 - 2)) or (2012 < 213)) then 											v84[v523 + (3 - 2)] = v522; 											v84[v523] = v522[v86[5 - 1]]; 											v78 = v78 + 1; 											v86 = v74[v78]; 											v84[v86[1 + 1]] = v86[(21 - 13) - 5]; 											v78 = v78 + 1 + 0; 											v518 = 3; 										end 									end 								else 									v84[v86[2 - 0]] = v29(v75[v86[107 - (103 + 1)]], nil, v61); 								end 							elseif (v87 <= (604 - (475 + 79))) then 								local v525; 								local v526, v527; 								local v528; 								local v529; 								v84[v86[4 - 2]] = v61[v86[9 - 6]]; 								v78 = v78 + 1 + 0; 								v86 = v74[v78]; 								v84[v86[2]] = v61[v86[3 + (0 - 0)]]; 								v78 = v78 + (1504 - (1395 + 108)); 								v86 = v74[v78]; 								v529 = v86[5 - 3]; 								v528 = v84[v86[3]]; 								v84[v529 + (1205 - (7 + 1197))] = v528; 								v84[v529] = v528[v86[(970 - (915 + 53)) + 2]]; 								v78 = v78 + 1 + 0; 								v86 = v74[v78]; 								v84[v86[321 - (27 + 292)]] = v86[8 - (806 - (768 + 33))]; 								v78 = v78 + (1 - 0); 								v86 = v74[v78]; 								v529 = v86[8 - 6]; 								v526, v527 = v77(v84[v529](v13(v84, v529 + (1 - (0 - 0)), v86[5 - 2]))); 								v79 = (v527 + v529) - (140 - (43 + 96)); 								v525 = 0; 								for v679 = v529, v79 do 									v525 = v525 + (4 - 3); 									v84[v679] = v526[v525]; 								end 								v78 = v78 + (1 - 0); 								v86 = v74[v78]; 								v529 = v86[2]; 								v84[v529] = v84[v529](v13(v84, v529 + 1 + 0, v79)); 								v78 = v78 + (1 - 0) + 0; 								v86 = v74[v78]; 								v84[v86[2]](); 								v78 = v78 + 1; 								v86 = v74[v78]; 								do 									return; 								end 							elseif (v87 == (379 - (287 + 41))) then 								local v782 = 0 - 0; 								local v783; 								while true do 									if (v782 == (0 + 0)) then 										v783 = v86[3 - (848 - (638 + 209))]; 										v84[v783] = v84[v783](v13(v84, v783 + 1 + 0, v79)); 										break; 									end 								end 							else 								local v784; 								local v785; 								v84[v86[1 + 1]][v86[1754 - (1414 + 337)]] = v84[v86[1944 - (854 + 788 + 298)]]; 								v78 = v78 + ((1688 - (96 + 1590)) - 1); 								v86 = v74[v78]; 								v785 = v86[(1677 - (741 + 931)) - 3]; 								v84[v785](v13(v84, v785 + (2 - 1), v86[1 + 2])); 								v78 = v78 + 1 + 0; 								v86 = v74[v78]; 								v785 = v86[2]; 								v784 = v84[v86[3]]; 								v84[v785 + 1] = v784; 								v84[v785] = v784[v86[976 - (357 + 615)]]; 								v78 = v78 + 1 + 0; 								v86 = v74[v78]; 								v84[v86[2]] = {}; 								v78 = v78 + 1; 								v86 = v74[v78]; 								v84[v86[(2 + 2) - (5 - 3)]][v86[3 + 0]] = v86[8 - 4]; 							end 						elseif (v87 <= (49 + 12)) then 							if (v87 <= (4 + (242 - 190))) then 								if ((4516 >= 2342) and (v87 <= (24 + 30))) then 									if ((v87 > (34 + 19)) or (2402 == 3445)) then 										local v544; 										local v545; 										v84[v86[2]][v86[3]] = v84[v86[1305 - (384 + 917)]]; 										v78 = v78 + 1; 										v86 = v74[v78]; 										v545 = v86[699 - (56 + 72 + 569)]; 										v84[v545](v13(v84, v545 + (1544 - (449 + 958 + 136)), v86[1890 - ((2606 - 1919) + 1200)])); 										v78 = v78 + (1711 - (556 + 1154)); 										v86 = v74[v78]; 										v545 = v86[2]; 										v544 = v84[v86[10 - (3 + 4)]]; 										v84[v545 + (96 - (5 + 4 + (350 - 264)))] = v544; 										v84[v545] = v544[v86[425 - (247 + 28 + 146)]]; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v84[v86[66 - (29 + 35)]] = {}; 										v78 = v78 + (4 - 3); 										v86 = v74[v78]; 										v84[v86[5 - 3]][v86[13 - 10]] = v86[(497 - (64 + 430)) + 1]; 									else 										v84[v86[1014 - (53 + 952 + 7)]][v86[411 - (312 + 96)]] = v86[6 - 2]; 									end 								elseif (v87 == (340 - (147 + 138))) then 									local v560 = v86[901 - ((1176 - (106 + 257)) + 86)]; 									local v561 = v84[v86[3 + 0]]; 									v84[v560 + 1] = v561; 									v84[v560] = v561[v86[7 - 3]]; 								else 									local v565; 									local v566, v567; 									local v568; 									local v569; 									v84[v86[494 - (18 + 474)]] = v61[v86[3]]; 									v78 = v78 + 1; 									v86 = v74[v78]; 									v84[v86[2]] = v61[v86[2 + 1]]; 									v78 = v78 + (3 - 2); 									v86 = v74[v78]; 									v569 = v86[2]; 									v568 = v84[v86[3 + 0]]; 									v84[v569 + (1087 - ((1581 - (496 + 225)) + 226))] = v568; 									v84[v569] = v568[v86[4]]; 									v78 = v78 + 1; 									v86 = v74[v78]; 									v84[v86[305 - (121 + 182)]] = v86[1 + 2]; 									v78 = v78 + (1241 - (988 + 252)); 									v86 = v74[v78]; 									v569 = v86[1 + (1 - 0)]; 									v566, v567 = v77(v84[v569](v13(v84, v569 + 1 + 0, v86[1973 - (49 + 1921)]))); 									v79 = (v567 + v569) - (891 - (223 + 667)); 									v565 = (253 - 201) - (51 + 1); 									for v682 = v569, v79 do 										v565 = v565 + (1 - 0); 										v84[v682] = v566[v565]; 									end 									v78 = v78 + (1 - 0); 									v86 = v74[v78]; 									v569 = v86[1127 - (146 + 979)]; 									v84[v569] = v84[v569](v13(v84, v569 + 1 + (1658 - (256 + 1402)), v79)); 									v78 = v78 + 1; 									v86 = v74[v78]; 									v84[v86[607 - (311 + 294)]](); 									v78 = v78 + (2 - 1); 									v86 = v74[v78]; 									do 										return; 									end 								end 							elseif (v87 <= ((1924 - (30 + 1869)) + 33)) then 								if (v87 == (1500 - (496 + 947))) then 									local v584; 									local v585, v586; 									local v587; 									local v588; 									v84[v86[2]] = v61[v86[1361 - (1233 + (1494 - (213 + 1156)))]]; 									v78 = v78 + (189 - (96 + 92)) + 0; 									v86 = v74[v78]; 									v84[v86[2 + 0]] = v61[v86[1 + 2]]; 									v78 = v78 + (1646 - (963 + 682)); 									v86 = v74[v78]; 									v588 = v86[1 + 1 + 0]; 									v587 = v84[v86[1507 - (504 + 1000)]]; 									v84[v588 + 1 + 0] = v587; 									v84[v588] = v587[v86[4 + 0]]; 									v78 = v78 + 1; 									v86 = v74[v78]; 									v84[v86[1 + 1]] = v86[4 - 1]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[2 + 0]] = v86[902 - (142 + 757)] ~= (182 - (156 + 26)); 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v588 = v86[2 - 0]; 									v585, v586 = v77(v84[v588](v13(v84, v588 + ((135 + 30) - (149 + 15)), v86[963 - (890 + 70)]))); 									v79 = (v586 + v588) - (118 - (39 + 78)); 									v584 = 482 - (14 + 468); 									for v685 = v588, v79 do 										v584 = v584 + (2 - 1); 										v84[v685] = v585[v584]; 									end 									v78 = v78 + (2 - 1); 									v86 = v74[v78]; 									v588 = v86[2 + 0]; 									v84[v588] = v84[v588](v13(v84, v588 + 1 + 0, v79)); 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[1 + 1]](); 									v78 = v78 + 1 + 0 + 0; 									v86 = v74[v78]; 									do 										return; 									end 								else 									local v603; 									local v604; 									v84[v86[3 - 1]][v86[3 + 0]] = v84[v86[13 - 9]]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v604 = v86[2]; 									v84[v604](v13(v84, v604 + ((131 - (32 + 47)) - (12 + 39)), v86[3 + 0])); 									v78 = v78 + (2 - 1); 									v86 = v74[v78]; 									v604 = v86[6 - 4]; 									v603 = v84[v86[1 + 2]]; 									v84[v604 + 1 + 0] = v603; 									v84[v604] = v603[v86[9 - 5]]; 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[(1986 - (1053 + 924)) - 7]] = {}; 									v78 = v78 + (1711 - (1596 + 112 + 2)); 									v86 = v74[v78]; 									v84[v86[4 - (2 - 0)]][v86[716 - (164 + 549)]] = v86[1442 - ((2707 - (685 + 963)) + 379)]; 								end 							elseif (v87 <= (72 - 13)) then 								local v617 = v86[3 - 1]; 								v84[v617] = v84[v617](); 							elseif (v87 == (32 + 28)) then 								v84[v86[1 + 1]][v86[3]] = v84[v86[4]]; 							else 								local v800 = v86[394 - ((225 - 80) + 247)]; 								v84[v800] = v84[v800](v84[v800 + 1 + 0]); 							end 						elseif (v87 <= (31 + 34)) then 							if ((160 <= 3550) and (v87 <= ((1895 - (541 + 1168)) - 123))) then 								if (v87 > 62) then 									local v619 = 0 + 0; 									local v620; 									local v621; 									local v622; 									while true do 										if ((149 < 3450) and (v619 == 2)) then 											v84[v86[2 + 0]] = {}; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v619 = 723 - (254 + 466); 										end 										if ((v619 == (564 - (544 + 16))) or (3406 < 2659)) then 											v84[v86[2]] = {}; 											v78 = v78 + (2 - 1); 											v86 = v74[v78]; 											v619 = 5; 										end 										if (v619 == (629 - (294 + 334))) then 											v84[v86[255 - (236 + 17)]][v86[3]] = v86[2 + 2]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v619 = 7 - 5; 										end 										if ((3445 == 3445) and (v619 == (14 - 11))) then 											v84[v86[2 + 0]][v86[1600 - (645 + 952)]] = v86[4]; 											v78 = v78 + 1 + 0; 											v86 = v74[v78]; 											v619 = (1636 - (669 + 169)) - (413 + 381); 										end 										if (v619 == (1 + 7)) then 											for v1316 = 3 - 2, v620 do 												v621[v1316] = v84[v622 + v1316]; 											end 											break; 										end 										if (v619 == 6) then 											v84[v86[3 - 1]] = v86[7 - 4]; 											v78 = v78 + (1971 - (582 + 1388)); 											v86 = v74[v78]; 											v619 = 7; 										end 										if ((4871 == 4871) and ((0 - 0) == v619)) then 											v620 = nil; 											v621 = nil; 											v622 = nil; 											v619 = 1 + (0 - 0); 										end 										if (((126 + 245) - (326 + 38)) == v619) then 											v622 = v86[2]; 											v621 = v84[v622]; 											v620 = v86[8 - 5]; 											v619 = 10 - 2; 										end 										if (v619 == ((138 + 487) - (47 + 573))) then 											v84[v86[(766 - (181 + 584)) + 1]] = v86[12 - 9]; 											v78 = v78 + (1 - 0); 											v86 = v74[v78]; 											v619 = 1670 - (1269 + 395); 										end 									end 								else 									v84[v86[494 - ((1471 - (665 + 730)) + 416)]] = v86[446 - (319 + 124)]; 								end 							elseif (v87 > (146 - 82)) then 								local v625; 								local v626, v627; 								local v628; 								local v629; 								v84[v86[1009 - (564 + 443)]] = v61[v86[7 - 4]]; 								v78 = v78 + (459 - ((970 - 633) + 121)); 								v86 = v74[v78]; 								v84[v86[5 - 3]] = v61[v86[3]]; 								v78 = v78 + 1; 								v86 = v74[v78]; 								v629 = v86[2]; 								v628 = v84[v86[3]]; 								v84[v629 + (3 - 2)] = v628; 								v84[v629] = v628[v86[1915 - (1261 + 650)]]; 								v78 = v78 + (1 - 0) + (1350 - (540 + 810)); 								v86 = v74[v78]; 								v84[v86[2]] = v86[3 - (0 - 0)]; 								v78 = v78 + 1; 								v86 = v74[v78]; 								v84[v86[1819 - (772 + (2873 - 1828))]] = v86[1 + 2] ~= (144 - (102 + 42)); 								v78 = v78 + (1845 - (1213 + 311 + 320)); 								v86 = v74[v78]; 								v629 = v86[1272 - (1049 + 221)]; 								v626, v627 = v77(v84[v629](v13(v84, v629 + 1, v86[159 - (18 + 138)]))); 								v79 = (v627 + v629) - (2 - 1); 								v625 = 1102 - (67 + 1035); 								for v688 = v629, v79 do 									v625 = v625 + 1; 									v84[v688] = v626[v625]; 								end 								v78 = v78 + 1; 								v86 = v74[v78]; 								v629 = v86[(553 - (166 + 37)) - ((2017 - (22 + 1859)) + 212)]; 								v84[v629] = v84[v629](v13(v84, v629 + (1773 - (843 + 929)), v79)); 								v78 = v78 + (4 - 3); 								v86 = v74[v78]; 								v84[v86[(264 - (30 + 232)) + 0]](); 								v78 = v78 + 1 + 0; 								v86 = v74[v78]; 								do 									return; 								end 							else 								local v645 = 1604 - (240 + 1364); 								local v646; 								local v647; 								while true do 									if (v645 == (1085 - (1050 + 32))) then 										v84[v647] = v646[v86[14 - 10]]; 										v78 = v78 + (2 - 1); 										v86 = v74[v78]; 										v84[v86[2 + 0]] = {}; 										v645 = 1059 - (331 + 724); 									end 									if (2 == v645) then 										v86 = v74[v78]; 										v647 = v86[(778 - (55 + 722)) + 1]; 										v646 = v84[v86[3]]; 										v84[v647 + (645 - ((576 - 307) + 375))] = v646; 										v645 = 728 - ((1942 - (78 + 1597)) + 458); 									end 									if ((v645 == (0 + 0 + 0)) or (2384 < 828)) then 										v646 = nil; 										v647 = nil; 										v84[v86[3 - 1]][v86[821 - (667 + 151)]] = v84[v86[4]]; 										v78 = v78 + 1; 										v645 = 1498 - (1283 + 127 + 87); 									end 									if ((v645 == (1901 - (1504 + 393))) or (3490 >= 3857)) then 										v78 = v78 + (2 - 1); 										v86 = v74[v78]; 										v84[v86[(5 + 0) - (552 - (305 + 244))]][v86[799 - (461 + 335)]] = v86[1 + 3]; 										break; 									end 									if ((v645 == (1762 - (1730 + 31))) or (1930 == 3490)) then 										v86 = v74[v78]; 										v647 = v86[1669 - (728 + 939)]; 										v84[v647](v13(v84, v647 + (3 - 2), v86[5 - 2])); 										v78 = v78 + ((2 + 0) - 1); 										v645 = 1070 - (138 + 930); 									end 								end 							end 						elseif (v87 <= (62 + 5)) then 							if ((284 == 284) and (v87 > (52 + 14))) then 								if (v84[v86[2]] == v86[4]) then 									v78 = v78 + 1; 								else 									v78 = v86[3]; 								end 							else 								local v648 = 0 + 0; 								local v649; 								local v650; 								while true do 									if (v648 == (4 - 3)) then 										v78 = v78 + ((1872 - (95 + 10)) - (459 + 1307)); 										v86 = v74[v78]; 										v650 = v86[1872 - (474 + 1396)]; 										v648 = 2; 									end 									if ((2448 > 1585) and (v648 == (10 - 4))) then 										v84[v86[2]][v86[3 + 0]] = v86[1 + 0 + 3]; 										break; 									end 									if ((3970 > 289) and (v648 == (14 - 9))) then 										v84[v86[6 - 4]] = {}; 										v78 = v78 + 1 + 0; 										v86 = v74[v78]; 										v648 = (25 - 6) - 13; 									end 									if (v648 == (0 - (762 - (592 + 170)))) then 										v649 = nil; 										v650 = nil; 										v84[v86[593 - (562 + 29)]][v86[3 + 0]] = v84[v86[1423 - (374 + 1045)]]; 										v648 = 1 + 0; 									end 									if (v648 == 3) then 										v650 = v86[5 - 3]; 										v649 = v84[v86[(2235 - 1594) - (448 + (477 - 287))]]; 										v84[v650 + 1 + 0] = v649; 										v648 = 2 + 2; 									end 									if (v648 == (3 + 1)) then 										v84[v650] = v649[v86[15 - (6 + 5)]]; 										v78 = v78 + (2 - 1); 										v86 = v74[v78]; 										v648 = 1499 - (1307 + 187); 									end 									if ((4729 == 4729) and (v648 == (7 - (2 + 3)))) then 										v84[v650](v13(v84, v650 + 1, v86[6 - 3])); 										v78 = v78 + (2 - 1); 										v86 = v74[v78]; 										v648 = 6 - 3; 									end 								end 							end 						elseif (v87 <= (751 - (232 + 451))) then 							local v651 = 0 + 0; 							local v652; 							local v653; 							local v654; 							local v655; 							local v656; 							while true do 								if ((1189 == 1189) and (v651 == (3 + 0))) then 									v86 = v74[v78]; 									v84[v86[566 - (510 + 9 + 45)]] = v86[3] ~= (0 - 0); 									v78 = v78 + (37 - (13 + 23)); 									v86 = v74[v78]; 									v656 = v86[(5 - 2) - 1]; 									v653, v654 = v77(v84[v656](v13(v84, v656 + 1, v86[3 - (507 - (353 + 154))]))); 									v651 = 7 - 3; 								end 								if ((1092 - (830 + 258)) == v651) then 									v79 = (v654 + v656) - (3 - 2); 									v652 = 0 + 0; 									for v1319 = v656, v79 do 										local v1320 = (0 - 0) + 0; 										while true do 											if (v1320 == (1441 - (860 + 581))) then 												v652 = v652 + 1; 												v84[v1319] = v653[v652]; 												break; 											end 										end 									end 									v78 = v78 + (3 - (2 - 0)); 									v86 = v74[v78]; 									v656 = v86[2 + 0 + 0]; 									v651 = (193 + 53) - (237 + 4); 								end 								if (v651 == ((2 + 0) - 1)) then 									v86 = v74[v78]; 									v84[v86[4 - 2]] = v61[v86[3 - 0]]; 									v78 = v78 + (1 - 0); 									v86 = v74[v78]; 									v656 = v86[3 - 1]; 									v655 = v84[v86[3]]; 									v651 = 2 + 0; 								end 								if (0 == v651) then 									v652 = nil; 									v653, v654 = nil; 									v655 = nil; 									v656 = nil; 									v84[v86[2 + 0]] = v61[v86[11 - 8]]; 									v78 = v78 + 1 + 0; 									v651 = 1 + 0; 								end 								if (v651 == ((3328 - 1900) - (85 + 1341))) then 									v84[v656 + 1] = v655; 									v84[v656] = v655[v86[4]]; 									v78 = v78 + (1 - 0); 									v86 = v74[v78]; 									v84[v86[5 - 3]] = v86[375 - (45 + 327)]; 									v78 = v78 + (1 - 0); 									v651 = 505 - (444 + 58); 								end 								if (v651 == (3 + 3)) then 									do 										return; 									end 									break; 								end 								if (v651 == (1 + 4)) then 									v84[v656] = v84[v656](v13(v84, v656 + 1, v79)); 									v78 = v78 + 1 + 0; 									v86 = v74[v78]; 									v84[v86[5 - (89 - (7 + 79))]](); 									v78 = v78 + ((811 + 922) - (64 + 1668)); 									v86 = v74[v78]; 									v651 = 6; 								end 							end 						elseif (v87 > (2042 - ((1408 - (24 + 157)) + 746))) then 							local v803; 							local v804, v805; 							local v806; 							local v807; 							v84[v86[5 - 3]] = v61[v86[3]]; 							v78 = v78 + (1 - 0); 							v86 = v74[v78]; 							v84[v86[496 - (415 + 79)]] = v61[v86[1 + 2]]; 							v78 = v78 + (1 - 0); 							v86 = v74[v78]; 							v807 = v86[493 - (142 + 349)]; 							v806 = v84[v86[2 + 1]]; 							v84[v807 + 1] = v806; 							v84[v807] = v806[v86[8 - 4]]; 							v78 = v78 + (1 - (0 + 0)); 							v86 = v74[v78]; 							v84[v86[2]] = v86[2 + (2 - 1)]; 							v78 = v78 + 1 + 0; 							v86 = v74[v78]; 							v807 = v86[5 - 3]; 							v804, v805 = v77(v84[v807](v13(v84, v807 + (1865 - (1710 + 154)), v86[321 - (200 + 118)]))); 							v79 = (v805 + v807) - 1; 							v803 = 0 + 0; 							for v1286 = v807, v79 do 								v803 = v803 + (1 - 0); 								v84[v1286] = v804[v803]; 							end 							v78 = v78 + (1 - 0); 							v86 = v74[v78]; 							v807 = v86[2 + (380 - (262 + 118))]; 							v84[v807] = v84[v807](v13(v84, v807 + 1 + 0, v79)); 							v78 = v78 + 1 + 0; 							v86 = v74[v78]; 							v84[v86[1 + 1]](); 							v78 = v78 + 1; 							v86 = v74[v78]; 							do 								return; 							end 						else 							local v822; 							local v823; 							v84[v86[4 - 2]][v86[3]] = v84[v86[1254 - (363 + 887)]]; 							v78 = v78 + (1 - (1083 - (1038 + 45))); 							v86 = v74[v78]; 							v823 = v86[9 - 7]; 							v84[v823](v13(v84, v823 + 1 + 0, v86[3])); 							v78 = v78 + 1; 							v86 = v74[v78]; 							v823 = v86[4 - 2]; 							v822 = v84[v86[3 + 0]]; 							v84[v823 + (1665 - ((1457 - 783) + 990))] = v822; 							v84[v823] = v822[v86[2 + (232 - (19 + 211))]]; 							v78 = v78 + 1 + 0; 							v86 = v74[v78]; 							v84[v86[2 - 0]] = {}; 							v78 = v78 + (1056 - (507 + 548)); 							v86 = v74[v78]; 							v84[v86[2]][v86[840 - (289 + 548)]] = v86[1822 - (821 + 997)]; 						end 						v78 = v78 + (256 - (195 + 60)); 						break; 					end 					if (v110 == (0 + 0)) then 						v86 = v74[v78]; 						v87 = v86[1502 - (251 + 1250)]; 						v110 = 2 - 1; 					end 				end 			end 		end; 	end 	return v29(v28(), {}, v17)(...); end return vv9(), ...);
